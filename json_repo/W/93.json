{"ID":"93","Name":"Improper Neutralization of CRLF Sequences ('CRLF Injection')","Abstraction":"Base","Structure":"Simple","Status":"Draft","Diagram":"/data/images/CWE-93-Diagram.png","Description":"The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"74","ViewID":"1000","Ordinal":"Primary"},{"Nature":"CanPrecede","CweID":"117","ViewID":"1000"}],"WeaknessOrdinalities":[{"Ordinality":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation","Note":"REALIZATION: This weakness is caused during implementation of an architectural security tactic."}],"CommonConsequences":[{"Scope":["Integrity"],"Impact":["Modify Application Data"]}],"DetectionMethods":[{"DetectionMethodID":"DM-14","Method":"Automated Static Analysis","Description":"Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Avoid using CRLF as a special sequence."},{"Phase":["Implementation"],"Description":"Appropriately filter or quote CRLF sequences in user-controlled input."}],"DemonstrativeExamples":[{"ID":"DX-224","Entries":[{"IntroText":"The following code segment reads the name of the author of a weblog entry, author, from an HTTP request and sets it in a cookie header of an HTTP response."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tString author = request.getParameter(AUTHOR_PARAM);\n\t...\n\tCookie cookie = new Cookie(\"author\", author);\n\tcookie.setMaxAge(cookieExpiration);\n\tresponse.addCookie(cookie);\n```"},{"BodyText":"Assuming a string consisting of standard alpha-numeric characters, such as \"Jane Smith\", is submitted in the request the HTTP response including this cookie might take the following form:"},{"Nature":"Result","ExampleCode":"```\n\tHTTP/1.1 200 OK\n\t...\n\tSet-Cookie: author=Jane Smith\n\t...\n```"},{"BodyText":"However, because the value of the cookie is composed of unvalidated user input, the response will only maintain this form if the value submitted for AUTHOR_PARAM does not contain any CR and LF characters. If an attacker submits a malicious string, such as"},{"Nature":"Attack","ExampleCode":"```\n\tWiley Hacker\\r\\nHTTP/1.1 200 OK\\r\\n\n```"},{"BodyText":"then the HTTP response would be split into two responses of the following form:"},{"Nature":"Result","ExampleCode":"```\n\tHTTP/1.1 200 OK\n\t...\n\tSet-Cookie: author=Wiley Hacker\n\tHTTP/1.1 200 OK\n\t...\n```"},{"BodyText":"The second response is completely controlled by the attacker and can be constructed with any header and body content desired. The ability to construct arbitrary HTTP responses permits a variety of resulting attacks, including:"},{"BodyText":"- cross-user defacement\n\n  - web and browser cache poisoning\n\n  - cross-site scripting\n\n  - page hijacking"}]},{"Entries":[{"IntroText":"If user input data that eventually makes it to a log message isn't checked for CRLF characters, it may be possible for an attacker to forge entries in a log file."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tlogger.info(\"User's street address: \" + request.getParameter(\"streetAddress\"));\n```"}]}],"ObservedExamples":[{"Reference":"CVE-2002-1771","Description":"CRLF injection enables spam proxy (add mail headers) using email address or name.","Link":"https://www.cve.org/CVERecord?id=CVE-2002-1771"},{"Reference":"CVE-2002-1783","Description":"CRLF injection in API function arguments modify headers for outgoing requests.","Link":"https://www.cve.org/CVERecord?id=CVE-2002-1783"},{"Reference":"CVE-2004-1513","Description":"Spoofed entries in web server log file via carriage returns","Link":"https://www.cve.org/CVERecord?id=CVE-2004-1513"},{"Reference":"CVE-2006-4624","Description":"Chain: inject fake log entries with fake timestamps using CRLF injection","Link":"https://www.cve.org/CVERecord?id=CVE-2006-4624"},{"Reference":"CVE-2005-1951","Description":"Chain: Application accepts CRLF in an object ID, allowing HTTP response splitting.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-1951"},{"Reference":"CVE-2004-1687","Description":"Chain: HTTP response splitting via CRLF in parameter related to URL.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-1687"}],"TaxonomyMappings":[{"TaxonomyName":"PLOVER","EntryName":"CRLF Injection"},{"TaxonomyName":"OWASP Top Ten 2007","EntryID":"A2","EntryName":"Injection Flaws","MappingFit":"CWE More Specific"},{"TaxonomyName":"WASC","EntryID":"24","EntryName":"HTTP Request Splitting"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP24","EntryName":"Tainted input to command"}],"RelatedAttackPatterns":["15","81"],"References":[{"ExternalReferenceID":"REF-928","Authors":["Ulf Harnhammar"],"Title":"CRLF Injection","Publication":"Bugtraq","PublicationYear":"2002","PublicationMonth":"05","PublicationDay":"07","URL":"http://marc.info/?l=bugtraq\u0026m=102088154213630\u0026w=2"},{"ExternalReferenceID":"REF-1456","Authors":["Imperva"],"Title":"CRLF Injection","URL":"https://www.imperva.com/learn/application-security/crlf-injection//","URLDate":"2025-02-21"},{"ExternalReferenceID":"REF-1457","Authors":["R00tendo"],"Title":"CRLF injection","PublicationYear":"2024","PublicationMonth":"02","PublicationDay":"25","URL":"https://medium.com/@R00tendo/crlf-injection-ae26521c5e4c","URLDate":"2025-02-21"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"PLOVER","SubmissionDate":"2006-07-19","SubmissionVersion":"Draft 3","SubmissionReleaseDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Sean Eidemiller","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"added/updated demonstrative examples"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, Other_Notes, Taxonomy_Mappings, Weakness_Ordinalities"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-03-10","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Name"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-10-29","ModificationComment":"updated Other_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-12-28","ModificationComment":"updated Likelihood_of_Exploit"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-02-16","ModificationComment":"updated Related_Attack_Patterns, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-04-05","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-06-21","ModificationComment":"updated Description, Name"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-03-29","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2015-12-07","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Causal_Nature, Likelihood_of_Exploit, Modes_of_Introduction, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Research_Gaps"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, Relationships, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-11-19","ModificationComment":"updated Demonstrative_Examples","ModificationVersion":"4.16","ModificationReleaseDate":"2024-11-19"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2025-04-03","ModificationComment":"updated Diagram, References","ModificationVersion":"4.17","ModificationReleaseDate":"2025-04-03"},{"Type":"Rename","PreviousEntryName":"CRLF Injection","Date":"2008-04-11"},{"Type":"Rename","PreviousEntryName":"Failure to Sanitize CRLF Sequences (aka 'CRLF Injection')","Date":"2009-05-27"},{"Type":"Rename","PreviousEntryName":"Failure to Sanitize CRLF Sequences ('CRLF Injection')","Date":"2010-06-21"}]}