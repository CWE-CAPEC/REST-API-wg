{"ID":"499","Name":"Serializable Class Containing Sensitive Data","Abstraction":"Variant","Structure":"Simple","Status":"Draft","Description":"The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.","ExtendedDescription":"Serializable classes are effectively open classes since data cannot be hidden in them. Classes that do not explicitly deny serialization can be serialized by any other class, which can then in turn use the data stored inside it.","LikelihoodOfExploit":"High","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"668","ViewID":"1000","Ordinal":"Primary"},{"Nature":"CanPrecede","CweID":"200","ViewID":"1000"}],"ApplicablePlatforms":[{"Type":"Language","Name":"Java","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Confidentiality"],"Impact":["Read Application Data"],"Note":"an attacker can write out the class to a byte stream, then extract the important data from it."}],"DetectionMethods":[{"DetectionMethodID":"DM-14","Method":"Automated Static Analysis","Description":"Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"In Java, explicitly define final writeObject() to prevent serialization. This is the recommended solution. Define the writeObject() function to throw an exception explicitly denying serialization."},{"Phase":["Implementation"],"Description":"Make sure to prevent serialization of your objects."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"This code creates a new record for a medical patient:"},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tclass PatientRecord {\n\t\tprivate String name;\n\t\tprivate String socialSecurityNum;\n\t\tpublic Patient(String name,String ssn) {\n\t\t\tthis.SetName(name);\n\t\t\tthis.SetSocialSecurityNumber(ssn);\n\t\t}\n\t}\n```"},{"BodyText":"This object does not explicitly deny serialization, allowing an attacker to serialize an instance of this object and gain a patient's name and Social Security number even though those fields are private."}]}],"TaxonomyMappings":[{"TaxonomyName":"CLASP","EntryName":"Information leak through serialization"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"SER03-J","EntryName":"Do not serialize unencrypted, sensitive data"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"SER05-J","EntryName":"Do not serialize instances of inner classes"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP23","EntryName":"Exposed Data"}],"References":[{"ExternalReferenceID":"REF-18","Authors":["Secure Software, Inc."],"Title":"The CLASP Application Security Process","PublicationYear":"2005","URL":"https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf","URLDate":"2024-11-17"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"CLASP","SubmissionDate":"2006-07-19","SubmissionVersion":"Draft 3","SubmissionReleaseDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Common_Consequences, Description, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-07-27","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"Information Leak through Serialization","Date":"2008-04-11"}]}