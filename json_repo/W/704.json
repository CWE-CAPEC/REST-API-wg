{"ID":"704","Name":"Incorrect Type Conversion or Cast","Abstraction":"Class","Structure":"Simple","Status":"Incomplete","Description":"The product does not correctly convert an object, resource, or structure from one type to a different type.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"664","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Name":"C","Prevalence":"Often"},{"Type":"Language","Name":"C++","Prevalence":"Often"},{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Other"],"Impact":["Other"]}],"DetectionMethods":[{"DetectionMethodID":"DM-13","Method":"Fuzzing","Description":"Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often capable of generating unexpected results such as crashes, memory corruption, or resource consumption. Fuzzing effectively produces repeatable test cases that clearly indicate bugs, which helps developers to diagnose the issues.","Effectiveness":"High"}],"DemonstrativeExamples":[{"ID":"DX-74","Entries":[{"IntroText":"In this example, depending on the return value of accecssmainframe(), the variable amount can hold a negative value when it is returned. Because the function is declared to return an unsigned value, amount will be implicitly cast to an unsigned number."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tunsigned int readdata () {\n\t\tint amount = 0;\n\t\t...\n\t\tamount = accessmainframe();\n\t\t...\n\t\treturn amount;\n\t}\n```"},{"BodyText":"If the return value of accessmainframe() is -1, then the return value of readdata() will be 4,294,967,295 on a system that uses 32-bit integers."}]},{"ID":"DX-188","Entries":[{"IntroText":"The following code uses a union to support the representation of different types of messages. It formats messages differently, depending on their type."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\t#define NAME_TYPE 1\n\t#define ID_TYPE 2\n\tstruct MessageBuffer\n\t{\n\t\tint msgType;\n\t\tunion {\n\t\t\tchar *name;\n\t\t\tint nameID;\n\t\t};\n\t};\n\tint main (int argc, char **argv) {\n\t\t\tstruct MessageBuffer buf;\n\t\t\tchar *defaultMessage = \"Hello World\";\n\t\t\tbuf.msgType = NAME_TYPE;\n\t\t\tbuf.name = defaultMessage;\n\t\t\tprintf(\"Pointer of buf.name is %p\\n\", buf.name);\n```\n/* This particular value for nameID is used to make the code architecture-independent. If coming from untrusted input, it could be any value. */* \n\t\t\t\n\t\t\tbuf.nameID = (int)(defaultMessage + 1);\n\t\t\tprintf(\"Pointer of buf.name is now %p\\n\", buf.name);\n\t\t\tif (buf.msgType == NAME_TYPE) {\n\t\t\t```\n\t\t\t\tprintf(\"Message: %s\\n\", buf.name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprintf(\"Message: Use ID %d\\n\", buf.nameID);\n\t\t\t}\n\t}\n```"},{"BodyText":"The code intends to process the message as a NAME_TYPE, and sets the default message to \"Hello World.\" However, since both buf.name and buf.nameID are part of the same union, they can act as aliases for the same memory location, depending on memory layout after compilation."},{"BodyText":"As a result, modification of buf.nameID - an int - can effectively modify the pointer that is stored in buf.name - a string."},{"BodyText":"Execution of the program might generate output such as:"},{"BodyText":"```\n\t\tPointer of name is 10830\n\t\tPointer of name is now 10831\n\t\tMessage: ello World\n```"},{"BodyText":"Notice how the pointer for buf.name was changed, even though buf.name was not explicitly modified."},{"BodyText":"In this case, the first \"H\" character of the message is omitted. However, if an attacker is able to fully control the value of buf.nameID, then buf.name could contain an arbitrary pointer, leading to out-of-bounds reads or writes."}]}],"ObservedExamples":[{"Reference":"CVE-2021-43537","Description":"Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory corruption (CWE-122)","Link":"https://www.cve.org/CVERecord?id=CVE-2021-43537"},{"Reference":"CVE-2022-3979","Description":"Chain: data visualization program written in PHP uses the \"!=\" operator instead of the type-strict \"!==\" operator (CWE-480) when validating hash values, potentially leading to an incorrect type conversion (CWE-704)","Link":"https://www.cve.org/CVERecord?id=CVE-2022-3979"}],"TaxonomyMappings":[{"TaxonomyName":"CERT C Secure Coding","EntryID":"EXP05-C","EntryName":"Do not cast away a const qualification"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"EXP39-C","EntryName":"Do not access a variable through a pointer of an incompatible type","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"INT31-C","EntryName":"Ensure that integer conversions do not result in lost or misinterpreted data","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"INT36-C","EntryName":"Converting a pointer to integer or integer to pointer","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"STR34-C","EntryName":"Cast characters to unsigned types before converting to larger integer sizes","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"STR37-C","EntryName":"Arguments to character handling functions must be representable as an unsigned char","MappingFit":"CWE More Abstract"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP1","EntryName":"Glitch in computation"},{"TaxonomyName":"OMG ASCRM","EntryID":"ASCRM-CWE-704"}],"References":[{"ExternalReferenceID":"REF-961","Section":"ASCRM-CWE-704","Authors":["Object Management Group (OMG)"],"Title":"Automated Source Code Reliability Measure (ASCRM)","PublicationYear":"2016","PublicationMonth":"01","URL":"http://www.omg.org/spec/ASCRM/1.0/"}],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class and might have Base-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2008-09-09","SubmissionComment":"Note: this date reflects when the entry was first published. Draft versions of this entry were provided to members of the CWE community and modified between Draft 9 and 1.0.","SubmissionVersion":"1.0","SubmissionReleaseDate":"2008-09-09"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-11-24","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2015-12-07","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-01-19","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-12-10","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, Relationships, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-10-26","ModificationComment":"updated Demonstrative_Examples, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Observed_Examples","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"}]}