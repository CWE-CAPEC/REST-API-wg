{"ID":"669","Name":"Incorrect Resource Transfer Between Spheres","Abstraction":"Class","Structure":"Simple","Status":"Draft","Description":"The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"664","ViewID":"1000","Ordinal":"Primary"}],"BackgroundDetails":["A \"control sphere\" is a set of resources and behaviors that are accessible to a single actor, or a group of actors. A product's security model will typically define multiple spheres, possibly implicitly. For example, a server might define one sphere for \"administrators\" who can create new user accounts with subdirectories under /home/server/, and a second sphere might cover the set of users who can create or delete files within their own subdirectories. A third sphere might be \"users who are authenticated to the operating system on which the product is installed.\" Each sphere has different sets of actors and allowable behaviors."],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation","Note":"REALIZATION: This weakness is caused during implementation of an architectural security tactic."},{"Phase":"Operation"}],"CommonConsequences":[{"Scope":["Confidentiality","Integrity"],"Impact":["Read Application Data","Modify Application Data","Unexpected State"]}],"DemonstrativeExamples":[{"ID":"DX-22","Entries":[{"IntroText":"The following code demonstrates the unrestricted upload of a file with a Java servlet and a path traversal vulnerability. The action attribute of an HTML form is sending the upload file request to the Java servlet."},{"Nature":"Good","Language":"HTML","ExampleCode":"```\n\t\u003cform action=\"FileUploadServlet\" method=\"post\" enctype=\"multipart/form-data\"\u003e\n\tChoose a file to upload:\n\t\u003cinput type=\"file\" name=\"filename\"/\u003e\n\t\u003cbr/\u003e\n\t\u003cinput type=\"submit\" name=\"submit\" value=\"Submit\"/\u003e\n\t\u003c/form\u003e\n```"},{"BodyText":"When submitted the Java servlet's doPost method will receive the request, extract the name of the file from the Http request header, read the file contents from the request and output the file to the local upload directory."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tpublic class FileUploadServlet extends HttpServlet {\n\t\t\t...\n\t\t\tprotected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t\t\t\tresponse.setContentType(\"text/html\");\n\t\t\t\t\tPrintWriter out = response.getWriter();\n\t\t\t\t\tString contentType = request.getContentType();\n\t\t\t\t\t// the starting position of the boundary header\n\t\t\t\t\tint ind = contentType.indexOf(\"boundary=\");\n\t\t\t\t\tString boundary = contentType.substring(ind+9);\n\t\t\t\t\tString pLine = new String();\n\t\t\t\t\tString uploadLocation = new String(UPLOAD_DIRECTORY_STRING); //Constant value\n\t\t\t\t\t// verify that content type is multipart form data\n\t\t\t\t\tif (contentType != null \u0026\u0026 contentType.indexOf(\"multipart/form-data\") != -1) {\n\t\t\t\t\t\t\t// extract the filename from the Http header\n\t\t\t\t\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));\n\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\tpLine = br.readLine();\n\t\t\t\t\t\t\tString filename = pLine.substring(pLine.lastIndexOf(\"\\\\\"), pLine.lastIndexOf(\"\\\"\"));\n\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t// output the file to the local upload directory\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));\n\t\t\t\t\t\t\t\t\tfor (String line; (line=br.readLine())!=null; ) {\n\t\t\t\t\t\t\t\t\t\tif (line.indexOf(boundary) == -1) {\n\t\t\t\t\t\t\t\t\t\t\tbw.write(line);\n\t\t\t\t\t\t\t\t\t\t\tbw.newLine();\n\t\t\t\t\t\t\t\t\t\t\tbw.flush();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} //end of for loop\n\t\t\t\t\t\t\t\t\tbw.close();\n\t\t\t\t\t\t\t} catch (IOException ex) {...}\n\t\t\t\t\t\t\t// output successful upload response HTML page\n\t\t\t\t\t}\n\t\t\t\t\t// output unsuccessful upload response HTML page\n\t\t\t\t\telse\n\t\t\t\t\t{...}\n\t\t\t}\n\t\t\t\t...\n\t}\n```"},{"BodyText":"This code does not perform a check on the type of the file being uploaded (CWE-434). This could allow an attacker to upload any executable file or other file with malicious code."},{"BodyText":"Additionally, the creation of the BufferedWriter object is subject to relative path traversal (CWE-23). Since the code does not check the filename that is provided in the header, an attacker can use \"../\" sequences to write to files outside of the intended directory. Depending on the executing environment, the attacker may be able to specify arbitrary files to write to, leading to a wide variety of consequences, from code execution, XSS (CWE-79), or system crash."}]},{"ID":"DX-219","Entries":[{"IntroText":"This code includes an external script to get database credentials, then authenticates a user against the database, allowing access to the application."},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n```\n//assume the password is already encrypted, avoiding CWE-312* \n\t\n\tfunction authenticate($username,$password){\n\t```\n\t\tinclude(\"http://external.example.com/dbInfo.php\");\n```\n//dbInfo.php makes $dbhost, $dbuser, $dbpass, $dbname available* \n\t\tmysql_connect($dbhost, $dbuser, $dbpass) or die ('Error connecting to mysql');\n\t\tmysql_select_db($dbname);\n\t\t$query = 'Select * from users where username='.$username.' And password='.$password;\n\t\t$result = mysql_query($query);\n\t\t\n\t\tif(mysql_numrows($result) == 1){\n\t\t```\n\t\t\tmysql_close();\n\t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\tmysql_close();\n\t\t\treturn false;\n\t\t}\n\t}\n```"},{"BodyText":"This code does not verify that the external domain accessed is the intended one. An attacker may somehow cause the external domain name to resolve to an attack server, which would provide the information for a false database. The attacker may then steal the usernames and encrypted passwords from real user login attempts, or simply allow themself to access the application without a real user account."},{"BodyText":"This example is also vulnerable to an Adversary-in-the-Middle AITM (CWE-300) attack."}]},{"ID":"DX-220","Entries":[{"IntroText":"This code either generates a public HTML user information page or a JSON response containing the same user information."},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n```\n// API flag, output JSON if set* \n\t$json = $_GET['json']\n\t$username = $_GET['user']\n\tif(!$json)\n\t{\n\t```\n\t\t\t$record = getUserRecord($username);\n\t\t\tforeach($record as $fieldName =\u003e $fieldValue)\n\t\t\t{\n\t\t\t\t\tif($fieldName == \"email_address\") {\n```\n// skip displaying user emails* \n\t\t\t\t\t\t\tcontinue;}\n\t\t\t\t\telse{\n\t\t\t\t\t```\n\t\t\t\t\t\twriteToHtmlPage($fieldName,$fieldValue);\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\telse\n\t{\n\t\t$record = getUserRecord($username);\n\t\techo json_encode($record);\n\t}\n```"},{"BodyText":"The programmer is careful to not display the user's e-mail address when displaying the public HTML page. However, the e-mail address is not removed from the JSON response, exposing the user's e-mail address."}]}],"ObservedExamples":[{"Reference":"CVE-2021-22909","Description":"Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).","Link":"https://www.cve.org/CVERecord?id=CVE-2021-22909"},{"Reference":"CVE-2023-5227","Description":"PHP-based FAQ management app does not check the MIME type for uploaded images","Link":"https://www.cve.org/CVERecord?id=CVE-2023-5227"},{"Reference":"CVE-2005-0406","Description":"Some image editors modify a JPEG image, but the original EXIF thumbnail image is left intact within the JPEG. (Also an interaction error).","Link":"https://www.cve.org/CVERecord?id=CVE-2005-0406"}],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class and might have Base-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2008-04-11","SubmissionVersion":"Draft 9","SubmissionReleaseDate":"2008-04-11"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, Other_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-10-14","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-10-29","ModificationComment":"updated Background_Details, Other_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-02-16","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2015-12-07","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Modes_of_Introduction, Relationships, Relevant_Properties"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Demonstrative_Examples, Observed_Examples, Relationships","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"}]}