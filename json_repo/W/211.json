{"ID":"211","Name":"Externally-Generated Error Message Containing Sensitive Information","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"209","ViewID":"1000","Ordinal":"Primary"}],"WeaknessOrdinalities":[{"Ordinality":"Resultant"}],"ApplicablePlatforms":[{"Type":"Language","Name":"PHP","Prevalence":"Often"},{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"PHP applications are often targeted for having this issue when the PHP interpreter generates the error outside of the application's control. However, other languages/environments exhibit the same issue."},{"Phase":"Implementation","Note":"REALIZATION: This weakness is caused during implementation of an architectural security tactic."},{"Phase":"Operation"}],"CommonConsequences":[{"Scope":["Confidentiality"],"Impact":["Read Application Data"]}],"PotentialMitigations":[{"Phase":["System Configuration"],"Description":"Configure the application's environment in a way that prevents errors from being generated. For example, in PHP, disable display_errors."},{"MitigationID":"MIT-40","Phase":["Implementation","Build and Compilation"],"Strategy":"Compilation or Build Hardening","Description":"Debugging information should not make its way into a production release."},{"MitigationID":"MIT-40","Phase":["Implementation","Build and Compilation"],"Strategy":"Environment Hardening","Description":"Debugging information should not make its way into a production release."},{"Phase":["Implementation"],"Description":"Handle exceptions internally and do not display errors containing potentially sensitive information to a user. Create default error pages if necessary."},{"Phase":["Implementation"],"Description":"The best way to prevent this weakness during implementation is to avoid any bugs that could trigger the external error message. This typically happens when the program encounters fatal errors, such as a divide-by-zero. You will not always be able to control the use of error pages, and you might not be using a language that handles exceptions."}],"DemonstrativeExamples":[{"ID":"DX-190","Entries":[{"IntroText":"The following servlet code does not catch runtime exceptions, meaning that if such an exception were to occur, the container may display potentially dangerous information (such as a full stack trace)."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t\tString username = request.getParameter(\"username\");\n```\n// May cause unchecked NullPointerException.* \n\t\t\tif (username.length() \u003c 10) {\n\t\t\t```\n\t\t\t\t...\n\t\t\t}\n\t}\n```"}]},{"ID":"DX-191","Entries":[{"IntroText":"In the following Java example the class InputFileRead enables an input file to be read using a FileReader object. In the constructor of this class a default input file path is set to some directory on the local file system and the method setInputFile must be called to set the name of the input file to be read in the default directory. The method readInputFile will create the FileReader object and will read the contents of the file. If the method setInputFile is not called prior to calling the method readInputFile then the File object will remain null when initializing the FileReader object. A Java RuntimeException will be raised, and an error message will be output to the user."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tpublic class InputFileRead {\n\t\t\tprivate File readFile = null;\n\t\t\tprivate FileReader reader = null;\n\t\t\tprivate String inputFilePath = null;\n\t\t\tprivate final String DEFAULT_FILE_PATH = \"c:\\\\somedirectory\\\\\";\n\t\t\tpublic InputFileRead() {\n\t\t\t\tinputFilePath = DEFAULT_FILE_PATH;\n\t\t\t}\n\t\t\tpublic void setInputFile(String inputFile) {\n```\n/* Assume appropriate validation / encoding is used and privileges / permissions are preserved */* \n\t\t\t\t\t}\n\t\t\t\n\t\t\tpublic void readInputFile() {\n\t\t\t```\n\t\t\t\t\ttry {\n\t\t\t\t\t\treader = new FileReader(readFile);\n\t\t\t\t\t\t...\n\t\t\t\t\t} catch (RuntimeException rex) {\n\t\t\t\t\t\tSystem.err.println(\"Error: Cannot open input file in the directory \" + inputFilePath);\n\t\t\t\t\t\tSystem.err.println(\"Input file has not been set, call setInputFile method before calling readInputFile\");\n\t\t\t\t\t} catch (FileNotFoundException ex) {...}\n\t\t\t}\n\t}\n```"},{"BodyText":"However, the error message output to the user contains information regarding the default directory on the local file system. This information can be exploited and may lead to unauthorized access or use of the system. Any Java RuntimeExceptions that are handled should not expose sensitive information to the user."}]}],"ObservedExamples":[{"Reference":"CVE-2004-1581","Description":"chain: product does not protect against direct request of an include file, leading to resultant path disclosure when the include file does not successfully execute.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-1581"},{"Reference":"CVE-2004-1579","Description":"Single \"'\" inserted into SQL query leads to invalid SQL query execution, triggering full path disclosure. Possibly resultant from more general SQL injection issue.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-1579"},{"Reference":"CVE-2005-0459","Description":"chain: product does not protect against direct request of a library file, leading to resultant path disclosure when the file does not successfully execute.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-0459"},{"Reference":"CVE-2005-0443","Description":"invalid parameter triggers a failure to find an include file, leading to infoleak in error message.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-0443"},{"Reference":"CVE-2005-0433","Description":"Various invalid requests lead to information leak in verbose error messages describing the failure to instantiate a class, open a configuration file, or execute an undefined function.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-0433"},{"Reference":"CVE-2004-1101","Description":"Improper handling of filename request with trailing \"/\" causes multiple consequences, including information leak in Visual Basic error message.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-1101"}],"FunctionalAreas":["Error Handling"],"TaxonomyMappings":[{"TaxonomyName":"PLOVER","EntryName":"Product-External Error Message Infoleak"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"Notes":[{"Type":"Relationship","Note":"This is inherently a resultant vulnerability from a weakness within the product or an interaction error."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"PLOVER","SubmissionDate":"2006-07-19","SubmissionVersion":"Draft 3","SubmissionReleaseDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Applicable_Platforms, Relationships, Other_Notes, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-10-14","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-11-24","ModificationComment":"updated Description, Enabling_Factors_for_Exploitation, Functional_Areas, Observed_Examples, Other_Notes, Potential_Mitigations, Relationship_Notes, Weakness_Ordinalities"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-06-21","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-03-29","ModificationComment":"updated Name"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Name"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Enabling_Factors_for_Exploitation, Modes_of_Introduction, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Description, Name, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Demonstrative_Examples","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"},{"Type":"Rename","PreviousEntryName":"Product-External Error Message Information Leak","Date":"2011-03-29"},{"Type":"Rename","PreviousEntryName":"Information Exposure Through External Error Message","Date":"2012-10-30"},{"Type":"Rename","PreviousEntryName":"Information Exposure Through Externally-Generated Error Message","Date":"2020-02-24"}]}