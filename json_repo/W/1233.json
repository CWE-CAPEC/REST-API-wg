{"ID":"1233","Name":"Security-Sensitive Hardware Controls with Missing Lock Bit Protection","Abstraction":"Base","Structure":"Simple","Status":"Stable","Description":"The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.","ExtendedDescription":"\n\nIntegrated circuits and hardware intellectual properties (IPs) might provide device configuration controls that need to be programmed after device power reset by a trusted firmware or software module, commonly set by BIOS/bootloader. After reset, there can be an expectation that the controls cannot be used to perform any further modification. This behavior is commonly implemented using a trusted lock bit, which can be set to disable writes to a protected set of registers or address regions. The lock protection is intended to prevent modification of certain system configuration (e.g., memory/memory protection unit configuration).\n\n\nHowever, if the lock bit does not effectively write-protect all system registers or controls that could modify the protected system configuration, then an adversary may be able to use software to access the registers/controls and modify the protected hardware configuration.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"284","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"667","ViewID":"1000"}],"WeaknessOrdinalities":[{"Ordinality":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Architecture","Class":"Not Architecture-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Not Technology-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases."},{"Phase":"Implementation","Note":"Such issues could be introduced during implementation and identified later during Testing or System Configuration phases."}],"CommonConsequences":[{"Scope":["Access Control"],"Impact":["Modify Memory"],"Note":"System Configuration protected by the lock bit can be modified even when the lock is set."}],"DetectionMethods":[{"Method":"Manual Analysis","Description":"Set the lock bit. Attempt to modify the information protected by the lock bit. If the information is changed, implement a design fix. Retest. Also, attempt to indirectly clear the lock bit or bypass it.","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Architecture and Design","Implementation","Testing"],"Description":"\n\n  - Security lock bit protections must be reviewed for design inconsistency and common weaknesses.\n\n  - Security lock programming flow and lock properties must be tested in pre-silicon and post-silicon testing.\n\n"}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"Consider the example design below for a digital thermal sensor that detects overheating of the silicon and triggers system shutdown. The system critical temperature limit (CRITICAL_TEMP_LIMIT) and thermal sensor calibration (TEMP_SENSOR_CALIB) data have to be programmed by the firmware."},{"Nature":"Bad","Language":"Other","ExampleCode":"| Register | Field description | \n| --- | --- |\n| CRITICAL_TEMP_LIMIT  | [31:8] Reserved field; Read only; Default 0  [7:0] Critical temp 0-255 Centigrade; Read-write-lock; Default 125  |\n| TEMP_SENSOR_CALIB  | [31:0] Thermal sensor calibration data. A slope value used to map sensor reading to a degree Centigrade. Read-write; Default 25   |\n| TEMP_SENSOR_LOCK  | [31:1] Reserved field; Read only; Default 0  [0] Lock bit, locks CRITICAL_TEMP_LIMIT register; Write-1-once; Default 0  |\n| TEMP_HW_SHUTDOWN  | [31:2] Reserved field; Read only; Default 0  [1] Enable hardware shutdown on a critical temperature detection; Read-write; Default 0  |\n| CURRENT_TEMP  | [31:8] Reserved field; Read only; Default 0  [7:0] Current Temp 0-255 Centigrade; Read-only; Default 0  |"},{"BodyText":"In this example note that only the CRITICAL_TEMP_LIMIT register is protected by the TEMP_SENSOR_LOCK bit, while the security design intent is to protect any modification of the critical temperature detection and response. \n\n\nThe response of the system, if the system heats to a critical temperature, is controlled by TEMP_HW_SHUTDOWN bit [1], which is not lockable. Also, the TEMP_SENSOR_CALIB register is not protected by the lock bit. \n\n\nBy modifying the temperature sensor calibration, the conversion of the sensor data to a degree centigrade can be changed, such that the current temperature will never be detected to exceed critical temperature value programmed by the protected lock. \n\n\nSimilarly, by modifying the TEMP_HW_SHUTDOWN.Enable bit, the system response detection of the current temperature exceeding critical temperature can be disabled."},{"Nature":"Good","ExampleCode":"Change TEMP_HW_SHUTDOWN and TEMP_SENSOR_CALIB controls to be locked by TEMP_SENSOR_LOCK. \n\n|  | \n|\n| TEMP_SENSOR_CALIB  | [31:0] Thermal sensor calibration data. A slope value used to map sensor reading to a degree Centigrade. Read-write-Lock; Default 25; Locked by TEMP_SENSOR_LOCK bit[0]   |\n| TEMP_HW_SHUTDOWN  | [31:2] Reserved field; Read only; Default 0  [1] Enable hardware shutdown on critical temperature detection; Read-write-Lock; Default 0; Locked by TEMP_SENSOR_LOCK bit[0]  |"}]}],"ObservedExamples":[{"Reference":"CVE-2018-9085","Description":"Certain servers leave a write protection lock bit unset after boot, potentially allowing modification of parts of flash memory.","Link":"https://www.cve.org/CVERecord?id=CVE-2018-9085"},{"Reference":"CVE-2014-8273","Description":"Chain: chipset has a race condition (CWE-362) between when an interrupt handler detects an attempt to write-enable the BIOS (in violation of the lock bit), and when the handler resets the write-enable bit back to 0, allowing attackers to issue BIOS writes during the timing window [REF-1237].","Link":"https://www.cve.org/CVERecord?id=CVE-2014-8273"}],"RelatedAttackPatterns":["176","680"],"References":[{"ExternalReferenceID":"REF-1237","Authors":["CERT Coordination Center"],"Title":"Intel BIOS locking mechanism contains race condition that enables write protection bypass","PublicationYear":"2015","PublicationMonth":"01","PublicationDay":"05","URL":"https://www.kb.cert.org/vuls/id/766164/"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi","SubmissionOrganization":"Intel Corporation","SubmissionDate":"2020-01-15","SubmissionVersion":"4.0","SubmissionReleaseDate":"2020-02-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated Maintenance_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Demonstrative_Examples, Description, Detection_Factors, Maintenance_Notes, Name, Observed_Examples, Potential_Mitigations, References, Relationships, Weakness_Ordinalities"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Related_Attack_Patterns, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Contribution","ContributionName":"Narasimha Kumar V Mangipudi","ContributionOrganization":"Lattice Semiconductor","ContributionDate":"2021-10-20","ContributionComment":"reviewed content changes","ContributionType":"Feedback"},{"Type":"Rename","PreviousEntryName":"Improper Hardware Lock Protection for Security Sensitive Controls","Date":"2021-10-28"}]}