{"ID":"1254","Name":"Incorrect Comparison Logic Granularity","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.","ExtendedDescription":"\n\nComparison logic is used to compare a variety of objects including passwords, Message Authentication Codes (MACs), and responses to verification challenges. When comparison logic is implemented at a finer granularity (e.g., byte-by-byte comparison) and breaks in the case of a comparison failure, an attacker can exploit this implementation to identify when exactly the failure occurred. With multiple attempts, the attacker may be able to guesses the correct password/response to challenge and elevate their privileges.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"208","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"697","ViewID":"1000"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Architecture","Class":"Not Architecture-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Not Technology-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Confidentiality","Authorization"],"Impact":["Bypass Protection Mechanism"]}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"\n\nThe hardware designer should ensure that comparison logic is implemented so as to compare in one operation instead in smaller chunks.\n"}],"ObservedExamples":[{"Reference":"CVE-2019-10482","Description":"Smartphone OS uses comparison functions that are not in constant time, allowing side channels","Link":"https://www.cve.org/CVERecord?id=CVE-2019-10482"},{"Reference":"CVE-2019-10071","Description":"Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies","Link":"https://www.cve.org/CVERecord?id=CVE-2019-10071"},{"Reference":"CVE-2014-0984","Description":"Password-checking function in router terminates validation of a password entry when it encounters the first incorrect character, which allows remote attackers to obtain passwords via a brute-force attack that relies on timing differences in responses to incorrect password guesses, aka a timing side-channel attack.","Link":"https://www.cve.org/CVERecord?id=CVE-2014-0984"}],"RelatedAttackPatterns":["26"],"References":[{"ExternalReferenceID":"REF-1079","Authors":["Joe Fitzpatrick"],"Title":"SCA4n00bz - Timing-based Sidechannel Attacks for Hardware N00bz workshop","URL":"https://github.com/securelyfitz/SCA4n00bz"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"Notes":[{"Type":"Maintenance","Note":"CWE 4.16 removed a demonstrative example for a hardware module because it was inaccurate and unable to be adapted. The CWE team is developing an alternative."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi","SubmissionOrganization":"Intel Corporation","SubmissionDate":"2020-02-12","SubmissionVersion":"4.1","SubmissionReleaseDate":"2020-02-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Observed_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-10-26","ModificationComment":"updated Demonstrative_Examples, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-11-19","ModificationComment":"updated Demonstrative_Examples, Maintenance_Notes","ModificationVersion":"4.16","ModificationReleaseDate":"2024-11-19"},{"Type":"Contribution","ContributionName":"Anders Nordstrom","ContributionOrganization":"Cycuity Inc.","ContributionDate":"2024-01-09","ContributionComment":"reported problems with the Verilog demonstrative example, leading to its removal from this entry","ContributionType":"Feedback"}]}