{"ID":"1246","Name":"Improper Write Handling in Limited-write Non-Volatile Memories","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.","ExtendedDescription":"\n\nNon-volatile memories such as NAND Flash, EEPROM, etc. have individually erasable segments, each of which can be put through a limited number of program/erase or write cycles. For example, the device can only endure a limited number of writes, after which the device becomes unreliable. In order to wear out the cells in a uniform manner, non-volatile memory and storage products based on the above-mentioned technologies implement a technique called wear leveling. Once a set threshold is reached, wear leveling maps writes of a logical block to a different physical block. This prevents a single physical block from prematurely failing due to a high concentration of writes. If wear leveling is improperly implemented, attackers may be able to programmatically cause the storage to become unreliable within a much shorter time than would normally be expected.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"400","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Architecture","Class":"Not Architecture-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"System on Chip","Prevalence":"Undetermined"},{"Type":"Technology","Name":"Memory Hardware","Prevalence":"Undetermined"},{"Type":"Technology","Name":"Storage Hardware","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Availability"],"Impact":["DoS: Instability"]}],"PotentialMitigations":[{"Phase":["Architecture and Design","Implementation","Testing"],"Description":"Include secure wear leveling algorithms and ensure they may not be bypassed.","Effectiveness":"High"}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"An attacker can render a memory line unusable by repeatedly causing a write to the memory line."},{"BodyText":"Below is example code from [REF-1058] that the user can execute repeatedly to cause line failure. W is the maximum associativity of any cache in the system; S is the size of the largest cache in the system."},{"Nature":"Attack","Language":"C++","ExampleCode":"// Do aligned alloc of (W+1) arrays each of size S\n while(1) {\n\n```\n\t for (ii = 0; ii \u003c W + 1; ii++)\n\t\t array[ii].element[0]++;\n }\n```"},{"BodyText":"Without wear leveling, the above attack will be successful. Simple randomization of blocks will not suffice as instead of the original physical block, the randomized physical block will be worn out."},{"Nature":"Good","ExampleCode":"```\n\tWear leveling must be used to even out writes to the device.\n```"}]}],"TaxonomyMappings":[{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 4-1","EntryName":"Req SD-4"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 4-1","EntryName":"Req SI-1"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 4-1","EntryName":"Req SVV-3"}],"RelatedAttackPatterns":["212"],"References":[{"ExternalReferenceID":"REF-1058","Authors":["Moinuddin Qureshi","Michele Franchescini","Vijayalakshmi Srinivasan","Luis Lastras","Bulent Abali","John Karidis"],"Title":"Enhancing Lifetime and Security of PCM-Based Main Memory with Start-Gap Wear Leveling","URL":"https://researcher.watson.ibm.com/researcher/files/us-moinqureshi/papers-sgap.pdf","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-1059","Authors":["Micron"],"Title":"Bad Block Management in NAND Flash Memory","URL":"https://www.micron.com/-/media/client/global/documents/products/technical-note/nand-flash/tn2959_bbm_in_nand_flash.pdf"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi","SubmissionOrganization":"Intel Corporation","SubmissionDate":"2020-02-10","SubmissionVersion":"4.0","SubmissionReleaseDate":"2020-02-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Demonstrative_Examples, Description, Potential_Mitigations, Research_Gaps"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Applicable_Platforms"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-06-28","ModificationComment":"updated Applicable_Platforms"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Demonstrative_Examples, Relationships, Research_Gaps"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Contribution","ContributionName":"\"Mapping CWE to 62443\" Sub-Working Group","ContributionOrganization":"CWE-CAPEC ICS/OT SIG","ContributionDate":"2023-04-25","ContributionComment":"Suggested mappings to ISA/IEC 62443.","ContributionType":"Content"}]}