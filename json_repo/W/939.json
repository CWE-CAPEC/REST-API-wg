{"ID":"939","Name":"Improper Authorization in Handler for Custom URL Scheme","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.","ExtendedDescription":"Mobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"862","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Technology","Class":"Mobile","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation","Note":"REALIZATION: This weakness is caused during implementation of an architectural security tactic."}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"\n\nUtilize a user prompt pop-up to authorize potentially harmful actions such as those modifying data or dealing with sensitive information.\n\n\nWhen designing functionality of actions in the URL scheme, consider whether the action should be accessible to all mobile applications, or if an allowlist of applications to interface with is appropriate.\n"}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"This iOS application uses a custom URL scheme. The replaceFileText action in the URL scheme allows an external application to interface with the file incomingMessage.txt and replace the contents with the text field of the query string."},{"BodyText":"External Application"},{"Nature":"Good","Language":"Objective-C","ExampleCode":"```\n\tNSString *stringURL = @\"appscheme://replaceFileText?file=incomingMessage.txt\u0026text=hello\";\n\tNSURL *url = [NSURL URLWithString:stringURL];\n\t[[UIApplication sharedApplication] openURL:url];\n```"},{"BodyText":"Application URL Handler"},{"Nature":"Bad","ExampleCode":"```\n\t- (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url {\n\t\tif (!url) {\n\t\t\treturn NO;\n\t\t}\n\t\tNSString *action = [url host];\n\t\tif([action isEqualToString: @\"replaceFileText\"]) {\n\t\t\tNSDictionary *dict = [self parseQueryStringExampleFunction:[url query]];\n```\n//this function will write contents to a specified file* \n\t\t\tFileObject *objectFile = [self writeToFile:[dict objectForKey: @\"file\"] withText:[dict objectForKey: @\"text\"]];}\n\t\treturn YES;}"},{"BodyText":"The handler has no restriction on who can use its functionality. The handler can be invoked using any method that invokes the URL handler such as the following malicious iframe embedded on a web page opened by Safari."},{"Nature":"Attack","Language":"HTML","ExampleCode":"```\n\t\u003ciframe src=\"appscheme://replaceFileText?file=Bookmarks.dat\u0026text=listOfMaliciousWebsites\"\u003e\n```"},{"BodyText":"The attacker can host a malicious website containing the iframe and trick users into going to the site via a crafted phishing email. Since Safari automatically executes iframes, the user is not prompted when the handler executes the iframe code which automatically invokes the URL handler replacing the bookmarks file with a list of malicious websites. Since replaceFileText is a potentially dangerous action, an action that modifies data, there should be a sanity check before the writeToFile:withText: function."}]},{"ID":"DX-109","Entries":[{"IntroText":"These Android and iOS applications intercept URL loading within a WebView and perform special actions if a particular URL scheme is used, thus allowing the Javascript within the WebView to communicate with the application:"},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n```\n// Android* \n\t@Override\n\tpublic boolean shouldOverrideUrlLoading(WebView view, String url){\n\t```\n\t\t\tif (url.substring(0,14).equalsIgnoreCase(\"examplescheme:\")){\n\t\t\t\tif(url.substring(14,25).equalsIgnoreCase(\"getUserInfo\")){\n\t\t\t\t\twriteDataToView(view, UserData);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t}\n```"},{"Nature":"Bad","Language":"Objective-C","ExampleCode":"```\n```\n// iOS* \n\t-(BOOL) webView:(UIWebView *)exWebView shouldStartLoadWithRequest:(NSURLRequest *)exRequest navigationType:(UIWebViewNavigationType)exNavigationType\n\t{\n\t```\n\t\t\tNSURL *URL = [exRequest URL];\n\t\t\tif ([[URL scheme] isEqualToString:@\"exampleScheme\"])\n\t\t\t{\n\t\t\t\t\tNSString *functionString = [URL resourceSpecifier];\n\t\t\t\t\tif ([functionString hasPrefix:@\"specialFunction\"])\n\t\t\t\t\t{\n```\n// Make data available back in webview.* \n\t\t\t\t\t\t\tUIWebView *webView = [self writeDataToView:[URL query]];}\n\t\t\t\t\treturn NO;}\n\t\t\treturn YES;}"},{"BodyText":"A call into native code can then be initiated by passing parameters within the URL:"},{"Nature":"Attack","Language":"JavaScript","ExampleCode":"```\n\twindow.location = examplescheme://method?parameter=value\n```"},{"BodyText":"Because the application does not check the source, a malicious website loaded within this WebView has the same access to the API as a trusted site."}]}],"ObservedExamples":[{"Reference":"CVE-2013-5725","Description":"URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions.","Link":"https://www.cve.org/CVERecord?id=CVE-2013-5725"},{"Reference":"CVE-2013-5726","Description":"URL scheme has action follow and favorite which allows remote attackers to force user to perform undesired actions.","Link":"https://www.cve.org/CVERecord?id=CVE-2013-5726"}],"References":[{"ExternalReferenceID":"REF-938","Authors":["Guillaume Ross"],"Title":"Scheming for Privacy and Security","PublicationYear":"2013","PublicationMonth":"11","PublicationDay":"11","URL":"https://brooksreview.net/2013/11/guest-post_scheming-for-privacy-and-security/","URLDate":"2023-04-07"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2014-01-14","SubmissionVersion":"2.6","SubmissionReleaseDate":"2014-02-19"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-01-19","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Modes_of_Introduction, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Applicable_Platforms, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-06-25","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}