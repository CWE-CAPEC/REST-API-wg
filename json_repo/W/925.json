{"ID":"925","Name":"Improper Verification of Intent by Broadcast Receiver","Abstraction":"Variant","Structure":"Simple","Status":"Incomplete","Description":"The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.","ExtendedDescription":"Certain types of Intents, identified by action string, can only be broadcast by the operating system itself, not by third-party applications. However, when an application registers to receive these implicit system intents, it is also registered to receive any explicit intents. While a malicious application cannot send an implicit system intent, it can send an explicit intent to the target application, which may assume that any received intent is a valid implicit system intent and not an explicit intent from another application. This may lead to unintended behavior.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"940","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Mobile","Prevalence":"Undetermined"}],"AlternateTerms":[{"Term":"Intent Spoofing"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design"}],"CommonConsequences":[{"Scope":["Integrity"],"Impact":["Gain Privileges or Assume Identity"],"Note":"Another application can impersonate the operating system and cause the software to perform an unintended action."}],"DetectionMethods":[{"DetectionMethodID":"DM-14","Method":"Automated Static Analysis","Description":"Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"Before acting on the Intent, check the Intent Action to make sure it matches the expected System action."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"The following example demonstrates the weakness."},{"Nature":"Bad","Language":"XML","ExampleCode":"```\n\t\u003cmanifest package=\"com.example.vulnerableApplication\"\u003e\n\t\t\t\u003capplication\u003e\n```\n...* \n\t\t\t\n\t\t\t```\n\t\t\t\t\t\u003creceiver android:name=\".ShutdownReceiver\"\u003e\n\t\t\t\t\t\t\u003cintent-filter\u003e\n\t\t\t\t\t\t\t\u003caction android:name=\"android.intent.action.ACTION_SHUTDOWN\" /\u003e\n\t\t\t\t\t\t\u003c/intent-filter\u003e\n\t\t\t\t\t\u003c/receiver\u003e\n```\n...* \n\t\t\t\n\t\t\t\u003c/application\u003e\u003c/manifest\u003e"},{"BodyText":"The ShutdownReceiver class will handle the intent:"},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n```\n...* \n\tIntentFilter filter = new IntentFilter(Intent.ACTION_SHUTDOWN);\n\tBroadcastReceiver sReceiver = new ShutDownReceiver();\n\tregisterReceiver(sReceiver, filter);\n\t\n\t *...* \n\t\n\tpublic class ShutdownReceiver extends BroadcastReceiver {\n\t```\n\t\t@Override\n\t\tpublic void onReceive(final Context context, final Intent intent) {\n\t\t\tmainActivity.saveLocalData();\n\t\t\tmainActivity.stopActivity();\n\t\t}\n\t}\n```"},{"BodyText":"Because the method does not confirm that the intent action is the expected system intent, any received intent will trigger the shutdown procedure, as shown here:"},{"Nature":"Attack","Language":"Java","ExampleCode":"```\n\twindow.location = examplescheme://method?parameter=value\n```"},{"BodyText":"An attacker can use this behavior to cause a denial of service."}]}],"RelatedAttackPatterns":["499"],"References":[{"ExternalReferenceID":"REF-922","Section":"3.2.1","Authors":["Erika Chin","Adrienne Porter Felt","Kate Greenwood","David Wagner"],"Title":"Analyzing Inter-Application Communication in Android","URL":"http://www.eecs.berkeley.edu/~daw/papers/intents-mobisys11.pdf"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"Notes":[{"Type":"Maintenance","Note":"This entry will be made more comprehensive in later CWE versions."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2013-06-24","SubmissionVersion":"2.5","SubmissionReleaseDate":"2013-07-17"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-02-18","ModificationComment":"updated Alternate_Terms, Demonstrative_Examples, Description, References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Applicable_Platforms, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}