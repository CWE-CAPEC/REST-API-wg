{"ID":"662","Name":"Improper Synchronization","Abstraction":"Class","Structure":"Simple","Status":"Draft","Description":"The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.","ExtendedDescription":"\n\nSynchronization refers to a variety of behaviors and mechanisms that allow two or more independently-operating processes or threads to ensure that they operate on shared resources in predictable ways that do not interfere with each other. Some shared resource operations cannot be executed atomically; that is, multiple steps must be guaranteed to execute sequentially, without any interference by other processes. Synchronization mechanisms vary widely, but they may include locking, mutexes, and semaphores. When a multi-step operation on a shared resource cannot be guaranteed to execute independent of interference, then the resulting behavior can be unpredictable. Improper synchronization could lead to data or memory corruption, denial of service, etc.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"664","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"691","ViewID":"1000"},{"Nature":"CanPrecede","CweID":"362","ViewID":"1000"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Integrity","Confidentiality","Other"],"Impact":["Modify Application Data","Read Application Data","Alter Execution Logic"]}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Use industry standard APIs to synchronize your code."}],"DemonstrativeExamples":[{"ID":"DX-24","Entries":[{"IntroText":"The following function attempts to acquire a lock in order to perform operations on a shared resource."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tvoid f(pthread_mutex_t *mutex) {\n\t\t\tpthread_mutex_lock(mutex);\n```\n/* access shared resource */* \n\t\t\t\n\t\t\t\n\t\t\tpthread_mutex_unlock(mutex);}"},{"BodyText":"However, the code does not check the value returned by pthread_mutex_lock() for errors. If pthread_mutex_lock() cannot acquire the mutex for any reason, the function may introduce a race condition into the program and result in undefined behavior."},{"BodyText":"In order to avoid data races, correctly written programs must check the result of thread synchronization functions and appropriately handle all errors, either by attempting to recover from them or reporting them to higher levels."},{"Nature":"Good","Language":"C","ExampleCode":"```\n\tint f(pthread_mutex_t *mutex) {\n\t\t\tint result;\n\t\t\tresult = pthread_mutex_lock(mutex);\n\t\t\tif (0 != result)\n\t\t\t\treturn result;\n```\n/* access shared resource */* \n\t\t\t\n\t\t\t\n\t\t\treturn pthread_mutex_unlock(mutex);}"}]},{"ID":"DX-170","Entries":[{"IntroText":"The following code intends to fork a process, then have both the parent and child processes print a single line."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tstatic void print (char * string) {\n\t\t\tchar * word;\n\t\t\tint counter;\n\t\t\tfor (word = string; counter = *word++; ) {\n\t\t\t\t\tputc(counter, stdout);\n\t\t\t\t\tfflush(stdout);\n```\n/* Make timing window a little larger... */* \n\t\t\t\t\t\n\t\t\t\t\tsleep(1);}}\n\t\n\tint main(void) {\n\t```\n\t\t\tpid_t pid;\n\t\t\tpid = fork();\n\t\t\tif (pid == -1) {\n\t\t\t\texit(-2);\n\t\t\t}\n\t\t\telse if (pid == 0) {\n\t\t\t\tprint(\"child\\n\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprint(\"PARENT\\n\");\n\t\t\t}\n\t\t\texit(0);\n\t}\n```"},{"BodyText":"One might expect the code to print out something like:"},{"BodyText":"```\n\t\tPARENT\n\t\tchild\n```"},{"BodyText":"However, because the parent and child are executing concurrently, and stdout is flushed each time a character is printed, the output might be mixed together, such as:"},{"BodyText":"```\n\t\tPcAhRiElNdT\n\t\t[blank line]\n\t\t[blank line]\n```"}]}],"ObservedExamples":[{"Reference":"CVE-2021-1782","Description":"Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV.","Link":"https://www.cve.org/CVERecord?id=CVE-2021-1782"},{"Reference":"CVE-2009-0935","Description":"Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice","Link":"https://www.cve.org/CVERecord?id=CVE-2009-0935"}],"TaxonomyMappings":[{"TaxonomyName":"CERT C Secure Coding","EntryID":"SIG00-C","EntryName":"Mask signals handled by noninterruptible signal handlers"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"SIG31-C","EntryName":"Do not access shared objects in signal handlers","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CLASP","EntryName":"State synchronization error"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"VNA03-J","EntryName":"Do not assume that a group of calls to independently atomic methods is atomic"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP19","EntryName":"Missing Lock"}],"RelatedAttackPatterns":["25","26","27","29"],"MappingNotes":{"Usage":"Discouraged","Rationale":"This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"Notes":[{"Type":"Maintenance","Note":"Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, race conditions, reentrant functions, etc. CWE-662 and its children - including CWE-667, CWE-820, CWE-821, and others - may need to be modified significantly, along with their relationships."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Community","SubmissionDate":"2008-04-11","SubmissionComment":"Submitted by members of the CWE community to extend early CWE versions","SubmissionVersion":"Draft 9","SubmissionReleaseDate":"2008-04-11"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Potential_Mitigations, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-10-14","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-11-24","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-03-10","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-09-27","ModificationComment":"updated Name, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Description, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2013-07-17","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-09-23","ModificationComment":"updated Description, Maintenance_Notes, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Description, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-12-10","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-10-26","ModificationComment":"updated Demonstrative_Examples, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Mapping_Notes","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"},{"Type":"Rename","PreviousEntryName":"Insufficient Synchronization","Date":"2010-09-27"}]}