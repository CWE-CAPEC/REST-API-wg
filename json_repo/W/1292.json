{"ID":"1292","Name":"Incorrect Conversion of Security Identifiers","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.","ExtendedDescription":"\n\nIn a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical transaction is comprised of source identity (to identify the originator of the transaction) and a destination identity (to route the transaction to the respective entity). Sometimes the transactions are qualified with a security identifier. This security identifier helps the destination agent decide on the set of allowed actions (e.g., access an asset for read and writes).\n\n\nA typical bus connects several leader and follower agents. Some follower agents implement bus protocols differently from leader agents. A protocol conversion happens at a bridge to seamlessly connect different protocols on the bus. One example is a system that implements a leader with the Advanced High-performance Bus (AHB) protocol and a follower with the Open-Core Protocol (OCP). A bridge AHB-to-OCP is needed to translate the transaction from one form to the other.\n\n\nA common weakness that can exist in this scenario is that this conversion between protocols is implemented incorrectly, whereupon an untrusted agent may gain unauthorized access to an asset.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"284","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"1294","ViewID":"1194","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Architecture","Class":"Not Architecture-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Name":"Bus/Interface Hardware","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Not Technology-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"Such issues could be introduced during hardware architecture and design, then identified later during Testing or System Configuration phases."},{"Phase":"Implementation","Note":"Such issues could be introduced during hardware implementation, then identified later during Testing or System Configuration phases."}],"CommonConsequences":[{"Scope":["Confidentiality","Integrity","Availability","Access Control"],"Impact":["Modify Memory","Read Memory","DoS: Resource Consumption (Other)","Execute Unauthorized Code or Commands","Gain Privileges or Assume Identity","Quality Degradation"],"Likelihood":["High"]}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"Security identifier decoders must be reviewed for design inconsistency and common weaknesses."},{"Phase":["Implementation"],"Description":"Access and programming flows must be tested in pre-silicon and post-silicon testing."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"Consider a system that supports AHB. Let us assume we have a follower agent that only understands OCP. To connect this follower to the leader, a bridge is introduced, i.e., AHB to OCP. \n\n\n The follower has assets to protect accesses from untrusted leaders, and it employs access controls based on policy, (e.g., AES-Key registers for encryption or decryption). The key is 128 bits implemented as a set of four 32-bit registers. The key registers are assets, and register AES_KEY_ACCESS_POLICY is defined to provide the necessary access controls. \n\n\n The AES_KEY_ACCESS_POLICY access-policy register defines which agents with a security identifier in the transaction can access the AES-key registers. The implemented AES_KEY_ACCESS_POLICY has 4 bits where each bit when \"Set\" allows access to the AES-Key registers to the corresponding agent that has the security identifier. The other bits from 31 through 4 are reserved and not used. \n\n|  | \n|\n|  Register  |  Field Description   |\n|  AES_ENC_DEC_KEY_0  |  AES key [0:31] for encryption or decryption Default 0x00000000   |\n|  AES_ENC_DEC_KEY_1  |  AES key [32:63] for encryption or decryption Default 0x00000000   |\n|  AES_ENC_DEC_KEY_2  |  AES key [64:95] for encryption or decryption Default 0x00000000   |\n|  AES_ENC_DEC_KEY_3  |  AES key [96:127] for encryption or decryption Default 0x00000000   |\n|  AES_KEY_ACCESS_POLICY  |  [31:4] Default 0x000000 [3:0] - 0x02 agent with Security Identifier \"1\" has access to AES_ENC_DEC_KEY_0 through AES_ENC_DEC_KEY_4 registers   |\n\n\t\n During conversion of the AHB-to-OCP transaction, the security identifier information must be preserved and passed on to the follower correctly."},{"Nature":"Bad","Language":"Other","ExampleCode":"In AHB-to-OCP bridge, the security identifier information conversion is done incorrectly."},{"BodyText":"Because of the incorrect conversion, the security identifier information is either lost or could be modified in such a way that an untrusted leader can access the AES-Key registers."},{"Nature":"Good","Language":"Other","ExampleCode":"The conversion of the signals from one protocol (AHB) to another (OCP) must be done while preserving the security identifier correctly."}]}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi","SubmissionOrganization":"Intel Corporation","SubmissionDate":"2020-04-29","SubmissionVersion":"4.2","SubmissionReleaseDate":"2020-08-20"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Applicable_Platforms"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-06-28","ModificationComment":"updated Applicable_Platforms"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Demonstrative_Examples, Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}