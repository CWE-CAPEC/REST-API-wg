{"ID":"440","Name":"Expected Behavior Violation","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"A feature, API, or function does not perform according to its specification.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"684","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"ICS/OT","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation"},{"Phase":"Operation"}],"CommonConsequences":[{"Scope":["Other"],"Impact":["Quality Degradation","Varies by Context"]}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"The provided code is extracted from the Control and Status Register (CSR), csr_regfile, module within the Hack@DAC'21 OpenPiton System-on-Chip (SoC). This module is designed to implement CSR registers in accordance with the RISC-V specification. The mie (machine interrupt enable) register is a 64-bit register [REF-1384], where bits correspond to different interrupt sources. As the name suggests, mie is a machine-level register that determines which interrupts are enabled. Note that in the example below the mie_q and mie_d registers represent the conceptual mie reigster in the RISC-V specification. The mie_d register is the value to be stored in the mie register while the mie_q register holds the current value of the mie register [REF-1385]."},{"BodyText":"The mideleg (machine interrupt delegation) register, also 64-bit wide, enables the delegation of specific interrupt sources from machine privilege mode to lower privilege levels. By setting specific bits in the mideleg register, the handling of certain interrupts can be delegated to lower privilege levels without engaging the machine-level privilege mode. For example, in supervisor mode, the mie register is limited to a specific register called the sie (supervisor interrupt enable) register. If delegated, an interrupt becomes visible in the sip (supervisor interrupt pending) register and can be enabled or blocked using the sie register. If no delegation occurs, the related bits in sip and sie are set to zero."},{"BodyText":"The sie register value is computed based on the current value of mie register, i.e., mie_q, and the mideleg register."},{"Nature":"Bad","Language":"Verilog","ExampleCode":"module csr_regfile #(...)(...);\n ...\n // ---------------------------\n // CSR Write and update logic\n // ---------------------------\n ...\n\n```\n\t if (csr_we) begin\n\t\t unique case (csr_addr.address)\n\t\t ...\n\t\t\t riscv::CSR_SIE: begin\n\t\t\t\t // the mideleg makes sure only delegate-able register\n\t\t\t\t //(and therefore also only implemented registers) are written\n```\nmie_d = (mie_q \u0026 ~mideleg_q) | (csr_wdata \u0026 mideleg_q) | utval_q;** \n\t\t\t\t end\n\t\t\t ...\n\t\t\t endcase\n\t\t end\n\t endmodule"},{"BodyText":"The above code snippet illustrates an instance of a vulnerable implementation of the sie register update logic, where users can tamper with the mie_d register value through the utval (user trap value) register. This behavior violates the RISC-V specification."},{"BodyText":"The code shows that the value of utval, among other signals, is used in updating the mie_d value within the sie update logic. While utval is a register accessible to users, it should not influence or compromise the integrity of sie. Through manipulation of the utval register, it becomes feasible to manipulate the sie register's value. This opens the door for potential attacks, as an adversary can gain control over or corrupt the sie value. Consequently, such manipulation empowers an attacker to enable or disable critical supervisor-level interrupts, resulting in various security risks such as privilege escalation or denial-of-service attacks."},{"BodyText":"A fix to this issue is to remove the utval from the right-hand side of the assignment. That is the value of the mie_d should be updated as shown in the good code example [REF-1386]."},{"Nature":"Good","Language":"Verilog","ExampleCode":"module csr_regfile #(...)(...);\n ...\n // ---------------------------\n // CSR Write and update logic\n // ---------------------------\n ...\n\n```\n\t if (csr_we) begin\n\t\t unique case (csr_addr.address)\n\t\t ...\n\t\t\t riscv::CSR_SIE: begin\n\t\t\t\t // the mideleg makes sure only delegate-able register\n\t\t\t\t //(and therefore also only implemented registers) are written\n```\nmie_d = (mie_q \u0026 ~mideleg_q) | (csr_wdata \u0026 mideleg_q);** \n\t\t\t\t end\n\t\t\t ...\n\t\t\t endcase\n\t\t end\n\t endmodule"}]}],"ObservedExamples":[{"Reference":"CVE-2003-0187","Description":"Program uses large timeouts on unconfirmed connections resulting from inconsistency in linked lists implementations.","Link":"https://www.cve.org/CVERecord?id=CVE-2003-0187"},{"Reference":"CVE-2003-0465","Description":"\"strncpy\" in Linux kernel acts different than libc on x86, leading to expected behavior difference - sort of a multiple interpretation error?","Link":"https://www.cve.org/CVERecord?id=CVE-2003-0465"},{"Reference":"CVE-2005-3265","Description":"Buffer overflow in product stems the use of a third party library function that is expected to have internal protection against overflows, but doesn't.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-3265"}],"TaxonomyMappings":[{"TaxonomyName":"PLOVER","EntryName":"Expected behavior violation"}],"References":[{"ExternalReferenceID":"REF-1384","Title":"The RISC-V Instruction Set Manual Volume II: Privileged Architecture page 28","PublicationYear":"2021","URL":"https://riscv.org/wp-content/uploads/2017/05/riscv-privileged-v1.10.pdf","URLDate":"2024-01-16"},{"ExternalReferenceID":"REF-1385","Title":"csr_regfile.sv","PublicationYear":"2021","URL":"https://github.com/HACK-EVENT/hackatdac21/blob/b9ecdf6068445d76d6bee692d163fededf7a9d9b/piton/design/chip/tile/ariane/src/csr_regfile.sv","URLDate":"2024-01-16"},{"ExternalReferenceID":"REF-1386","Title":"Fix for csr_regfile.sv","PublicationYear":"2021","URL":"https://github.com/HACK-EVENT/hackatdac21/blob/2341c625a28d2fb87d370e32c45b68bd711cc43b/piton/design/chip/tile/ariane/src/csr_regfile.sv#L519C4-L522C20","URLDate":"2024-01-16"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"Notes":[{"Type":"Theoretical","Note":"The behavior of an application that is not consistent with the expectations of the developer may lead to incorrect use of the software."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"PLOVER","SubmissionDate":"2006-07-19","SubmissionVersion":"Draft 3","SubmissionReleaseDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, Other_Notes, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-10-29","ModificationComment":"updated Other_Notes, Relevant_Properties, Theoretical_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Relevant_Properties"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Description, Observed_Examples, Theoretical_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Applicable_Platforms, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-10-26","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Demonstrative_Examples, References","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"},{"Type":"Contribution","ContributionName":"Chen Chen, Rahul Kande, Jeyavijayan Rajendran","ContributionOrganization":"Texas A\u0026M University","ContributionDate":"2023-06-21","ContributionComment":"suggested demonstrative example","ContributionType":"Content"},{"Type":"Contribution","ContributionName":"Shaza Zeitouni, Mohamadreza Rostami, Ahmad-Reza Sadeghi","ContributionOrganization":"Technical University of Darmstadt","ContributionDate":"2023-06-21","ContributionComment":"suggested demonstrative example","ContributionType":"Content"}]}