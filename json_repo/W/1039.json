{"ID":"1039","Name":"Inadequate Detection or Handling of Adversarial Input Perturbations in Automated Recognition Mechanism","Abstraction":"Class","Structure":"Simple","Status":"Incomplete","Description":"The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.","ExtendedDescription":"\n\nWhen techniques such as machine learning are used to automatically classify input streams, and those classifications are used for security-critical decisions, then any mistake in classification can introduce a vulnerability that allows attackers to cause the product to make the wrong security decision or disrupt service of the automated mechanism. If the mechanism is not developed or \"trained\" with enough input data or has not adequately undergone test and evaluation, then attackers may be able to craft malicious inputs that intentionally trigger the incorrect classification.\n\n\nTargeted technologies include, but are not necessarily limited to:\n\n\n  - automated speech recognition\n\n  - automated image recognition\n\n  - automated cyber defense\n\n  - Chatbot, LLMs, generative AI\n\nFor example, an attacker might modify road signs or road surface markings to trick autonomous vehicles into misreading the sign/marking and performing a dangerous action. Another example includes an attacker that crafts highly specific and complex prompts to \"jailbreak\" a chatbot to bypass safety or privacy mechanisms, better known as prompt injection attacks.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"693","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"697","ViewID":"1000"}],"WeaknessOrdinalities":[{"Ordinality":"Primary","Description":"This weakness does not depend on other weaknesses and is the result of choices made during optimization."}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Name":"AI/ML","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"This issue can be introduced into the automated algorithm itself due to inadequate training data used as well as lack of validation, verification, testing, and evaluation of the algorithm. These factors can affect the overall robustness of the algorithm when introduced into operational settings."},{"Phase":"Implementation","Note":"The developer might not apply external validation of inputs into the algorithm."}],"CommonConsequences":[{"Scope":["Integrity"],"Impact":["Bypass Protection Mechanism"],"Note":"When the automated recognition is used in a protection mechanism, an attacker may be able to craft inputs that are misinterpreted in a way that grants excess privileges."},{"Scope":["Availability"],"Impact":["DoS: Resource Consumption (Other)","DoS: Instability"],"Note":"There could be disruption to the service of the automated recognition system, which could cause further downstream failures of the software."},{"Scope":["Confidentiality"],"Impact":["Read Application Data"],"Note":"This weakness could lead to breaches of data privacy through exposing features of the training data, e.g., by using membership inference attacks or prompt injection attacks."},{"Scope":["Other"],"Impact":["Varies by Context"],"Note":"The consequences depend on how the application applies or integrates the affected algorithm."}],"DetectionMethods":[{"Method":"Dynamic Analysis with Manual Results Interpretation","Description":"Use indicators from model performance deviations such as sudden drops in accuracy or unexpected outputs to verify the model."},{"Method":"Dynamic Analysis with Manual Results Interpretation","Description":"Use indicators from input data collection mechanisms to verify that inputs are statistically within the distribution of the training and test data."},{"Method":"Architecture or Design Review","Description":"Use multiple models or model ensembling techniques to check for consistency of predictions/inferences."}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"Algorithmic modifications such as model pruning or compression can help mitigate this weakness. Model pruning ensures that only weights that are most relevant to the task are used in the inference of incoming data and has shown resilience to adversarial perturbed data."},{"Phase":["Architecture and Design"],"Description":"Consider implementing adversarial training, a method that introduces adversarial examples into the training data to promote robustness of algorithm at inference time."},{"Phase":["Architecture and Design"],"Description":"Consider implementing model hardening to fortify the internal structure of the algorithm, including techniques such as regularization and optimization to desensitize algorithms to minor input perturbations and/or changes."},{"Phase":["Implementation"],"Description":"Consider implementing multiple models or using model ensembling techniques to improve robustness of individual model weaknesses against adversarial input perturbations."},{"Phase":["Implementation"],"Description":"Incorporate uncertainty estimations into the algorithm that trigger human intervention or secondary/fallback software when reached. This could be when inference predictions and confidence scores are abnormally high/low comparative to expected model performance."},{"Phase":["Integration"],"Description":"Reactive defenses such as input sanitization, defensive distillation, and input transformations can all be implemented before input data reaches the algorithm for inference."},{"Phase":["Integration"],"Description":"Consider reducing the output granularity of the inference/prediction such that attackers cannot gain additional information due to leakage in order to craft adversarially perturbed data."}],"References":[{"ExternalReferenceID":"REF-16","Authors":["Christian Szegedy","Wojciech Zaremba","Ilya Sutskever","Joan Bruna","Dumitru Erhan","Ian Goodfellow","Rob Fergus"],"Title":"Intriguing properties of neural networks","PublicationYear":"2014","PublicationMonth":"02","PublicationDay":"19","URL":"https://arxiv.org/abs/1312.6199"},{"ExternalReferenceID":"REF-17","Authors":["OpenAI"],"Title":"Attacking Machine Learning with Adversarial Examples","PublicationYear":"2017","PublicationMonth":"02","PublicationDay":"24","URL":"https://openai.com/research/attacking-machine-learning-with-adversarial-examples","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-15","Authors":["James Vincent"],"Title":"Magic AI: These are the Optical Illusions that Trick, Fool, and Flummox Computers","PublicationYear":"2017","PublicationMonth":"04","PublicationDay":"12","Publisher":"The Verge","URL":"https://www.theverge.com/2017/4/12/15271874/ai-adversarial-images-fooling-attacks-artificial-intelligence"},{"ExternalReferenceID":"REF-13","Authors":["Xuejing Yuan","Yuxuan Chen","Yue Zhao","Yunhui Long","Xiaokang Liu","Kai Chen","Shengzhi Zhang","Heqing Huang","Xiaofeng Wang","Carl A. Gunter"],"Title":"CommanderSong: A Systematic Approach for Practical Adversarial Voice Recognition","PublicationYear":"2018","PublicationMonth":"01","PublicationDay":"24","URL":"https://arxiv.org/pdf/1801.08535.pdf"},{"ExternalReferenceID":"REF-14","Authors":["Nicholas Carlini","David Wagner"],"Title":"Audio Adversarial Examples: Targeted Attacks on Speech-to-Text","PublicationYear":"2018","PublicationMonth":"01","PublicationDay":"05","URL":"https://arxiv.org/abs/1801.01944"}],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class, but it does not have Base-level children.","Comments":"This entry is classified in a part of CWE's hierarchy that does not have sufficiently low-level coverage, which might reflect a lack of classification-oriented weakness research in the software security community. Conduct careful root cause analysis to determine the original mistake that led to this weakness. If closer analysis reveals that this weakness is appropriate, then this might be the best available CWE to use for mapping. If no other option is available, then it is acceptable to map to this CWE.","Reasons":["Abstraction","Other"]},"Notes":[{"Type":"Relationship","Note":"Further investigation is needed to determine if better relationships exist or if additional organizational entries need to be created. For example, this issue might be better related to \"recognition of input as an incorrect type,\" which might place it as a sibling of CWE-704 (incorrect type conversion)."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2018-03-12","SubmissionVersion":"3.1","SubmissionReleaseDate":"2018-03-29"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-07-16","ModificationComment":"updated Applicable_Platforms","ModificationVersion":"4.15","ModificationReleaseDate":"2024-07-16"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2025-04-03","ModificationComment":"updated Common_Consequences, Description, Detection_Factors, Mapping_Notes, Modes_of_Introduction, Name, Potential_Mitigations, Time_of_Introduction","ModificationVersion":"4.17","ModificationReleaseDate":"2025-04-03"},{"Type":"Rename","PreviousEntryName":"Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations","Date":"2025-04-03"}]}