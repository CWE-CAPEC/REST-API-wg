{"ID":"766","Name":"Critical Data Element Declared Public","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.","ExtendedDescription":"\n\nThis issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"732","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"1061","ViewID":"1000"}],"WeaknessOrdinalities":[{"Ordinality":"Primary"},{"Ordinality":"Indirect"}],"ApplicablePlatforms":[{"Type":"Language","Name":"C++","Prevalence":"Undetermined"},{"Type":"Language","Name":"C#","Prevalence":"Undetermined"},{"Type":"Language","Name":"Java","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Integrity","Confidentiality"],"Impact":["Read Application Data","Modify Application Data"],"Note":"Making a critical variable public allows anyone with access to the object in which the variable is contained to alter or read the value."},{"Scope":["Other"],"Impact":["Reduce Maintainability"]}],"DetectionMethods":[{"DetectionMethodID":"DM-14","Method":"Automated Static Analysis","Description":"Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Data should be private, static, and final whenever possible. This will assure that your code is protected by instantiating early, preventing access, and preventing tampering."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"The following example declares a critical variable public, making it accessible to anyone with access to the object in which it is contained."},{"Nature":"Bad","Language":"C++","ExampleCode":"```\n\tpublic: char* password;\n```"},{"BodyText":"Instead, the critical data should be declared private."},{"Nature":"Good","Language":"C++","ExampleCode":"```\n\tprivate: char* password;\n```"},{"BodyText":"Even though this example declares the password to be private, there are other possible issues with this implementation, such as the possibility of recovering the password from process memory (CWE-257)."}]},{"ID":"DX-212","Entries":[{"IntroText":"The following example shows a basic user account class that includes member variables for the username and password as well as a public constructor for the class and a public method to authorize access to the user account."},{"Nature":"Bad","Language":"C++","ExampleCode":"```\n\t#define MAX_PASSWORD_LENGTH 15\n\t#define MAX_USERNAME_LENGTH 15\n\tclass UserAccount\n\t{\n\t\t\tpublic:\n\t\t\t\t\tUserAccount(char *username, char *password)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((strlen(username) \u003e MAX_USERNAME_LENGTH) ||\n\t\t\t\t\t\t(strlen(password) \u003e MAX_PASSWORD_LENGTH)) {\n\t\t\t\t\t\t\tExitError(\"Invalid username or password\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrcpy(this-\u003eusername, username);\n\t\t\t\t\t\tstrcpy(this-\u003epassword, password);\n\t\t\t\t\t}\n\t\t\tint authorizeAccess(char *username, char *password)\n\t\t\t{\n\t\t\t\t\tif ((strlen(username) \u003e MAX_USERNAME_LENGTH) ||\n\t\t\t\t\t(strlen(password) \u003e MAX_PASSWORD_LENGTH)) {\n\t\t\t\t\t\tExitError(\"Invalid username or password\");\n\t\t\t\t\t}\n```\n// if the username and password in the input parameters are equal to* \n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t *// the username and password of this account class then authorize access* \n\t\t\t\t\tif (strcmp(this-\u003eusername, username) ||\n\t\t\t\t\tstrcmp(this-\u003epassword, password))\n\t\t\t\t\t```\n\t\t\t\t\t\treturn 0;\n```\n// otherwise do not authorize access* \n\t\t\t\t\telse\n\t\t\t\t\t```\n\t\t\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tchar username[MAX_USERNAME_LENGTH+1];\n\t\t\tchar password[MAX_PASSWORD_LENGTH+1];\n\t};\n```"},{"BodyText":"However, the member variables username and password are declared public and therefore will allow access and changes to the member variables to anyone with access to the object. These member variables should be declared private as shown below to prevent unauthorized access and changes."},{"Nature":"Good","Language":"C++","ExampleCode":"```\n\tclass UserAccount\n\t{\n\tpublic:\n\t\t...\n\tprivate:\n\t\tchar username[MAX_USERNAME_LENGTH+1];\n\t\tchar password[MAX_PASSWORD_LENGTH+1];\n\t};\n```"}]}],"ObservedExamples":[{"Reference":"CVE-2010-3860","Description":"variables declared public allow remote read of system properties such as user name and home directory.","Link":"https://www.cve.org/CVERecord?id=CVE-2010-3860"}],"TaxonomyMappings":[{"TaxonomyName":"CLASP","EntryName":"Failure to protect stored data from modification"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"OBJ01-J","EntryName":"Declare data members as private and provide accessible wrapper methods"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP28","EntryName":"Unexpected access points"},{"TaxonomyName":"OMG ASCMM","EntryID":"ASCMM-MNT-15"}],"References":[{"ExternalReferenceID":"REF-960","Section":"ASCMM-MNT-15","Authors":["Object Management Group (OMG)"],"Title":"Automated Source Code Maintainability Measure (ASCMM)","PublicationYear":"2016","PublicationMonth":"01","URL":"https://www.omg.org/spec/ASCMM/","URLDate":"2023-04-07"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2009-03-03","SubmissionVersion":"1.4","SubmissionReleaseDate":"2009-05-27"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-12-28","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Likelihood_of_Exploit, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Common_Consequences, Description, Name, References, Relationships, Taxonomy_Mappings, Weakness_Ordinalities"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, References, Relationships, Time_of_Introduction, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-10-26","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2024-02-29","ModificationComment":"updated Demonstrative_Examples","ModificationVersion":"4.14","ModificationReleaseDate":"2024-02-29"},{"Type":"Rename","PreviousEntryName":"Critical Variable Declared Public","Date":"2019-01-03"}]}