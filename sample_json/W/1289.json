{"ID":"1289","Name":"Improper Validation of Unsafe Equivalence in Input","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.","ExtendedDescription":"\n\nAttackers can sometimes bypass input validation schemes by finding inputs that appear to be safe, but will be dangerous when processed at a lower layer or by a downstream component. For example, a simple XSS protection mechanism might try to validate that an input has no \"\u003cscript\u003e\" tags using case-sensitive matching, but since HTML is case-insensitive when processed by web browsers, an attacker could inject \"\u003cScrIpT\u003e\" and trigger XSS.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"20","ViewID":"1000","Ordinal":"Primary"},{"Nature":"PeerOf","CweID":"41","ViewID":"1000"},{"Nature":"PeerOf","CweID":"178","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Often"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Other"],"Impact":["Varies by Context"]}],"PotentialMitigations":[{"MitigationID":"MIT-5","Phase":["Implementation"],"Strategy":"Input Validation","Description":"\n\nAssume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, denylists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n","Effectiveness":"High"}],"ObservedExamples":[{"Reference":"CVE-2021-39155","Description":"Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hostname with mixed case or other variations.","Link":"https://www.cve.org/CVERecord?id=CVE-2021-39155"},{"Reference":"CVE-2020-11053","Description":"Chain: Go-based Oauth2 reverse proxy can send the authenticated user to another site at the end of the authentication flow. A redirect URL with HTML-encoded whitespace characters can bypass the validation (CWE-1289) to redirect to a malicious site (CWE-601)","Link":"https://www.cve.org/CVERecord?id=CVE-2020-11053"},{"Reference":"CVE-2005-0269","Description":"File extension check in forum software only verifies extensions that contain all lowercase letters, which allows remote attackers to upload arbitrary files via file extensions that include uppercase letters.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-0269"},{"Reference":"CVE-2001-1238","Description":"Task Manager does not allow local users to end processes with uppercase letters named (1) winlogon.exe, (2) csrss.exe, (3) smss.exe and (4) services.exe via the Process tab which could allow local users to install Trojan horses that cannot be stopped.","Link":"https://www.cve.org/CVERecord?id=CVE-2001-1238"},{"Reference":"CVE-2004-2214","Description":"HTTP server allows bypass of access restrictions using URIs with mixed case.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-2214"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"Notes":[{"Type":"Maintenance","Note":"This entry is still under development and will continue to see updates and content improvements."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2020-06-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}