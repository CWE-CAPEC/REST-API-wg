{"ID":"681","Name":"Incorrect Conversion between Numeric Types","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.","LikelihoodOfExploit":"High","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"704","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"704","ViewID":"1003","Ordinal":"Primary"},{"Nature":"CanPrecede","CweID":"682","ViewID":"1000"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Other","Integrity"],"Impact":["Unexpected State","Quality Degradation"],"Note":"The program could wind up using the wrong number and generate incorrect results. If the number is used to allocate resources or make a security decision, then this could introduce a vulnerability."}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Avoid making conversion between numeric types. Always check for the allowed ranges."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"In the following Java example, a float literal is cast to an integer, thus causing a loss of precision."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tint i = (int) 33457.8f;\n```"}]},{"Entries":[{"IntroText":"This code adds a float and an integer together, casting the result to an integer."},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n\t$floatVal = 1.8345;\n\t$intVal = 3;\n\t$result = (int)$floatVal + $intVal;\n```"},{"BodyText":"Normally, PHP will preserve the precision of this operation, making $result = 4.8345. After the cast to int, it is reasonable to expect PHP to follow rounding convention and set $result = 5. However, the explicit cast to int always rounds DOWN, so the final value of $result is 4. This behavior may have unintended consequences."}]},{"ID":"DX-73","Entries":[{"IntroText":"In this example the variable amount can hold a negative value when it is returned. Because the function is declared to return an unsigned int, amount will be implicitly converted to unsigned."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tunsigned int readdata () {\n\t\tint amount = 0;\n\t\t...\n\t\tif (result == ERROR)\n\t\tamount = -1;\n\t\t...\n\t\treturn amount;\n\t}\n```"},{"BodyText":"If the error condition in the code above is met, then the return value of readdata() will be 4,294,967,295 on a system that uses 32-bit integers."}]},{"ID":"DX-74","Entries":[{"IntroText":"In this example, depending on the return value of accecssmainframe(), the variable amount can hold a negative value when it is returned. Because the function is declared to return an unsigned value, amount will be implicitly cast to an unsigned number."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tunsigned int readdata () {\n\t\tint amount = 0;\n\t\t...\n\t\tamount = accessmainframe();\n\t\t...\n\t\treturn amount;\n\t}\n```"},{"BodyText":"If the return value of accessmainframe() is -1, then the return value of readdata() will be 4,294,967,295 on a system that uses 32-bit integers."}]}],"ObservedExamples":[{"Reference":"CVE-2007-4268","Description":"Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122)","Link":"https://www.cve.org/CVERecord?id=CVE-2007-4268"},{"Reference":"CVE-2007-4988","Description":"Chain: signed short width value in image processor is sign extended during conversion to unsigned int, which leads to integer overflow and heap-based buffer overflow.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-4988"},{"Reference":"CVE-2009-0231","Description":"Integer truncation of length value leads to heap-based buffer overflow.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-0231"},{"Reference":"CVE-2008-3282","Description":"Size of a particular type changes for 64-bit platforms, leading to an integer truncation in document processor causes incorrect index to be generated.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-3282"}],"TaxonomyMappings":[{"TaxonomyName":"CERT C Secure Coding","EntryID":"FLP34-C","EntryName":"Ensure that floating point conversions are within range of the new type","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"INT15-C","EntryName":"Use intmax_t or uintmax_t for formatted IO on programmer-defined integer types"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"INT31-C","EntryName":"Ensure that integer conversions do not result in lost or misinterpreted data","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"INT35-C","EntryName":"Evaluate integer expressions in a larger size before comparing or assigning to that size"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"NUM12-J","EntryName":"Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP1","EntryName":"Glitch in computation"},{"TaxonomyName":"OMG ASCSM","EntryID":"ASCSM-CWE-681"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-962","Section":"ASCSM-CWE-681","Authors":["Object Management Group (OMG)"],"Title":"Automated Source Code Security Measure (ASCSM)","PublicationYear":"2016","PublicationMonth":"01","URL":"http://www.omg.org/spec/ASCSM/1.0/"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Community","SubmissionDate":"2008-04-11"},{"Type":"Modification","ModificationName":"Sean Eidemiller","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"added/updated demonstrative examples"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Potential_Mitigations, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-11-24","ModificationComment":"updated Description, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-12-28","ModificationComment":"updated Applicable_Platforms, Likelihood_of_Exploit, Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-02-16","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-03-29","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Common_Consequences, Observed_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Demonstrative_Examples, References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Likelihood_of_Exploit, Observed_Examples, Taxonomy_Mappings, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-12-10","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}