{"ID":"1249","Name":"Application-Level Admin Tool with Inconsistent View of Underlying Operating System","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state.","ExtendedDescription":"\n\nMany products provide web-based applications or other interfaces for managing the underlying operating system. This is common with cloud, network access devices, home networking, and other systems. When the management tool does not accurately represent what is in the OS - such as user accounts - then the administrator might not see suspicious activities that would be noticed otherwise.\n\n\nFor example, numerous systems utilize a web front-end for administrative control. They also offer the ability to add, alter, and drop users with various privileges as it relates to the functionality of the system. A potential architectural weakness may exist where the user information reflected in the web interface does not mirror the users in the underlying operating system. Many web UI or REST APIs use the underlying operating system for authentication; the system's logic may also track an additional set of user capabilities within configuration files and datasets for authorization capabilities. When there is a discrepancy between the user information in the UI or REST API's interface system and the underlying operating system's user listing, this may introduce a weakness into the system. For example, if an attacker compromises the OS and adds a new user account - a \"ghost\" account - then the attacker could escape detection if the management tool does not list the newly-added account.\n\n\nThis discrepancy could be exploited in several ways:\n\n\n  - A rogue admin could insert a new account into a system that will persist if they are terminated or wish to take action on a system that cannot be directly associated with them.\n\n  - An attacker can leverage a separate command injection attack available through the web interface to insert a ghost account with shell privileges such as ssh.\n\n  - An attacker can leverage existing web interface APIs, manipulated in such a way that a new user is inserted into the operating system, and the user web account is either partially created or not at all.\n\n  - An attacker could create an admin account which is viewable by an administrator, use this account to create the ghost account, delete logs and delete the first created admin account.\n\nMany of these attacker scenarios can be realized by leveraging separate vulnerabilities related to XSS, command injection, authentication bypass, or logic flaws on the various systems. ","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"1250","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Web Based","Prevalence":"Undetermined"}],"AlternateTerms":[{"Term":"Ghost in the Shell"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"The design might assume that the underlying OS does not change."},{"Phase":"Implementation","Note":"Assumptions about the underlying OS might be hard-coded into the application or otherwise in external data stores in a way that is not updated when the OS's state changes."}],"CommonConsequences":[{"Scope":["Access Control"],"Impact":["Varies by Context"]},{"Scope":["Accountability"],"Impact":["Hide Activities"]},{"Scope":["Other"],"Impact":["Unexpected State"]}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"\n\nEnsure that the admin tool refreshes its model of the underlying OS on a regular basis, and note any inconsistencies with configuration files or other data sources that are expected to have the same data.\n"}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"Suppose that an attacker successfully gains root privileges on a Linux system and adds a new 'user2' account:"},{"Nature":"Attack","Language":"Other","ExampleCode":"```\n\techo \"user2:x:0:0::/root:/\" \u003e\u003e /etc/passwd;\n\techo \"user2:\\$6\\$IdvyrM6VJnG8Su5U\\$1gmW3Nm.IO4vxTQDQ1C8urm72JCadOHZQwqiH/nRtL8dPY80xS4Ovsv5bPCMWnXKKWwmsocSWXupUf17LB3oS.:17256:0:99999:7:::\" \u003e\u003e /etc/shadow;\n```"},{"BodyText":"This new user2 account would not be noticed on the web interface, if the interface does not refresh its data of available users."},{"BodyText":"It could be argued that for this specific example, an attacker with root privileges would be likely to compromise the admin tool or otherwise feed it with false data. However, this example shows how the discrepancy in critical data can help attackers to escape detection."}]}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-1070","Authors":["Tony Martin"],"Title":"Ghost in the Shell Weakness","PublicationYear":"2020","PublicationMonth":"02","PublicationDay":"13","URL":"https://friendsglobal.com/ghost-in-the-shell/ghost-in-the-shell-weakness/","URLDate":"2023-04-07"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"Tony Martin","SubmissionDate":"2019-06-06"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-06-25","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}