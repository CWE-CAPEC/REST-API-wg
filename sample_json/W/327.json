{"ID":"327","Name":"Use of a Broken or Risky Cryptographic Algorithm","Abstraction":"Class","Structure":"Simple","Status":"Draft","Description":"The product uses a broken or risky cryptographic algorithm or protocol.","ExtendedDescription":"\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n","LikelihoodOfExploit":"High","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"693","ViewID":"1000","Ordinal":"Primary"},{"Nature":"PeerOf","CweID":"311","ViewID":"1000"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Language","Name":"Verilog","Prevalence":"Undetermined"},{"Type":"Language","Name":"VHDL","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Not Technology-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"ICS/OT","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."},{"Phase":"Implementation","Note":"With hardware, the Architecture or Design Phase might start with compliant cryptography, but it is replaced with a non-compliant crypto during the later Implementation phase due to implementation constraints (e.g., not enough entropy to make it function properly, or not enough silicon real estate available to implement). Or, in rare cases (especially for long projects that span over years), the Architecture specifications might start with cryptography that was originally compliant at the time the Architectural specs were written, but over the time it became non-compliant due to progress made in attacking the crypto."}],"CommonConsequences":[{"Scope":["Confidentiality"],"Impact":["Read Application Data"],"Note":"The confidentiality of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm."},{"Scope":["Integrity"],"Impact":["Modify Application Data"],"Note":"The integrity of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm."},{"Scope":["Accountability","Non-Repudiation"],"Impact":["Hide Activities"],"Note":"If the cryptographic algorithm is used to ensure the identity of the source of the data (such as digital signatures), then a broken algorithm will compromise this scheme and the source of the data cannot be proven."}],"DetectionMethods":[{"Method":"Automated Analysis","Description":"Automated methods may be useful for recognizing commonly-used libraries or features that have become obsolete.","Effectiveness":"Moderate","EffectivenessNotes":"False negatives may occur if the tool is not aware of the cryptographic libraries in use, or if custom cryptography is being used."},{"DetectionMethodID":"DM-7","Method":"Manual Analysis","Description":"This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.","EffectivenessNotes":"These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."},{"Method":"Automated Static Analysis - Binary or Bytecode","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary / Bytecode simple extractor - strings, ELF readers, etc.","Effectiveness":"SOAR Partial"},{"Method":"Manual Static Analysis - Binary or Bytecode","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities \u0026 anomalies","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Automated Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Manual Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tMan-in-the-middle attack tool\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFramework-based Fuzzer\n\t\tAutomated Monitored Execution\n\t\tMonitored Virtual Environment - run potentially malicious code in sandbox / wrapper / virtual machine, see if it does anything suspicious","Effectiveness":"High"},{"Method":"Manual Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tManual Source Code Review (not inspections)\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source","Effectiveness":"High"},{"Method":"Automated Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer","Effectiveness":"High"},{"Method":"Automated Static Analysis","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tConfiguration Checker","Effectiveness":"SOAR Partial"},{"Method":"Architecture or Design Review","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFormal Methods / Correct-By-Construction\n\t```\n\t\tCost effective for partial coverage:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"MitigationID":"MIT-24","Phase":["Architecture and Design"],"Strategy":"Libraries or Frameworks","Description":"\n\nWhen there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is currently considered to be strong by experts in the field, and use well-tested implementations. As with all cryptographic mechanisms, the source code should be available for analysis.\n\n\nFor example, US government systems require FIPS 140-2 certification [REF-1192].\n\n\nDo not develop custom or private cryptographic algorithms. They will likely be exposed to attacks that are well-understood by cryptographers. Reverse engineering techniques are mature. If the algorithm can be compromised if attackers find out how it works, then it is especially weak.\n\n\nPeriodically ensure that the cryptography has not become obsolete. Some older algorithms, once thought to require a billion years of computing time, can now be broken in days or hours. This includes MD4, MD5, SHA1, DES, and other algorithms that were once regarded as strong. [REF-267]\n"},{"MitigationID":"MIT-52","Phase":["Architecture and Design"],"Description":"Ensure that the design allows one cryptographic algorithm to be replaced with another in the next generation or version. Where possible, use wrappers to make the interfaces uniform. This will make it easier to upgrade to stronger algorithms. With hardware, design the product at the Intellectual Property (IP) level so that one cryptographic algorithm can be replaced with another in the next generation of the hardware product.","Effectiveness":"Defense in Depth"},{"Phase":["Architecture and Design"],"Description":"Carefully manage and protect cryptographic keys (see CWE-320). If the keys can be guessed or stolen, then the strength of the cryptography itself is irrelevant."},{"MitigationID":"MIT-4","Phase":["Architecture and Design"],"Strategy":"Libraries or Frameworks","Description":"\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nIndustry-standard implementations will save development time and may be more likely to avoid errors that can occur during implementation of cryptographic algorithms. Consider the ESAPI Encryption feature.\n"},{"MitigationID":"MIT-25","Phase":["Implementation","Architecture and Design"],"Description":"When using industry-approved techniques, use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"These code examples use the Data Encryption Standard (DES)."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tEVP_des_ecb();\n```"},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tCipher des=Cipher.getInstance(\"DES...\");\n\tdes.initEncrypt(key2);\n```"},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n\tfunction encryptPassword($password){\n\t\t$iv_size = mcrypt_get_iv_size(MCRYPT_DES, MCRYPT_MODE_ECB);\n\t\t$iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);\n\t\t$key = \"This is a password encryption key\";\n\t\t$encryptedPassword = mcrypt_encrypt(MCRYPT_DES, $key, $password, MCRYPT_MODE_ECB, $iv);\n\t\treturn $encryptedPassword;\n\t}\n```"},{"BodyText":"Once considered a strong algorithm, DES now regarded as insufficient for many applications. It has been replaced by Advanced Encryption Standard (AES)."}]},{"Entries":[{"IntroText":"Suppose a chip manufacturer decides to implement a hashing scheme for verifying integrity property of certain bitstream, and it chooses to implement a SHA1 hardware accelerator for to implement the scheme."},{"Nature":"Bad","Language":"Other","ExampleCode":"```\n\tThe manufacturer chooses a SHA1 hardware accelerator for to implement the scheme because it already has a working SHA1 Intellectual Property (IP) that the manufacturer had created and used earlier, so this reuse of IP saves design cost.\n```"},{"BodyText":"However, SHA1 was theoretically broken in 2005 and practically broken in 2017 at a cost of $110K. This means an attacker with access to cloud-rented computing power will now be able to provide a malicious bitstream with the same hash value, thereby defeating the purpose for which the hash was used."},{"BodyText":"This issue could have been avoided with better design."},{"Nature":"Good","Language":"Other","ExampleCode":"```\n\tThe manufacturer could have chosen a cryptographic solution that is recommended by the wide security community (including standard-setting bodies like NIST) and is not expected to be broken (or even better, weakened) within the reasonable life expectancy of the hardware product. In this case, the architects could have used SHA-2 or SHA-3, even if it meant that such choice would cost extra.\n```"}]},{"ID":"DX-153","Entries":[{"IntroText":"In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."},{"BodyText":"Multiple OT products used weak cryptography."}]}],"ObservedExamples":[{"Reference":"CVE-2022-30273","Description":"SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity","Link":"https://www.cve.org/CVERecord?id=CVE-2022-30273"},{"Reference":"CVE-2022-30320","Description":"Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.","Link":"https://www.cve.org/CVERecord?id=CVE-2022-30320"},{"Reference":"CVE-2008-3775","Description":"Product uses \"ROT-25\" to obfuscate the password in the registry.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-3775"},{"Reference":"CVE-2007-4150","Description":"product only uses \"XOR\" to obfuscate sensitive data","Link":"https://www.cve.org/CVERecord?id=CVE-2007-4150"},{"Reference":"CVE-2007-5460","Description":"product only uses \"XOR\" and a fixed key to obfuscate sensitive data","Link":"https://www.cve.org/CVERecord?id=CVE-2007-5460"},{"Reference":"CVE-2005-4860","Description":"Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-4860"},{"Reference":"CVE-2002-2058","Description":"Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.","Link":"https://www.cve.org/CVERecord?id=CVE-2002-2058"},{"Reference":"CVE-2008-3188","Description":"Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-3188"},{"Reference":"CVE-2005-2946","Description":"Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-2946"},{"Reference":"CVE-2007-6013","Description":"Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-6013"}],"TaxonomyMappings":[{"TaxonomyName":"CLASP","EntryName":"Using a broken or risky cryptographic algorithm"},{"TaxonomyName":"OWASP Top Ten 2004","EntryID":"A8","EntryName":"Insecure Storage","MappingFit":"CWE More Specific"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"MSC30-C","EntryName":"Do not use the rand() function for generating pseudorandom numbers","MappingFit":"CWE More Abstract"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"MSC32-C","EntryName":"Properly seed pseudorandom number generators","MappingFit":"CWE More Abstract"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"MSC02-J","EntryName":"Generate strong random numbers"},{"TaxonomyName":"OMG ASCSM","EntryID":"ASCSM-CWE-327"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 3-3","EntryName":"Req SR 4.3"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 4-2","EntryName":"Req CR 4.3"}],"RelatedAttackPatterns":["20","459","473","475","608","614","97"],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class and might have Base-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"References":[{"ExternalReferenceID":"REF-280","Authors":["Bruce Schneier"],"Title":"Applied Cryptography","PublicationYear":"1996","Publisher":"John Wiley \u0026 Sons","URL":"https://www.schneier.com/books/applied-cryptography","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-281","Authors":["Alfred J. Menezes","Paul C. van Oorschot","Scott A. Vanstone"],"Title":"Handbook of Applied Cryptography","PublicationYear":"1996","PublicationMonth":"10","URL":"https://cacr.uwaterloo.ca/hac/","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-282","Authors":["C Matthew Curtin"],"Title":"Avoiding bogus encryption products: Snake Oil FAQ","PublicationYear":"1998","PublicationMonth":"04","PublicationDay":"10","URL":"http://www.faqs.org/faqs/cryptography-faq/snake-oil/"},{"ExternalReferenceID":"REF-267","Authors":["Information Technology Laboratory, National Institute of Standards and Technology"],"Title":"SECURITY REQUIREMENTS FOR CRYPTOGRAPHIC MODULES","PublicationYear":"2001","PublicationMonth":"05","PublicationDay":"25","URL":"https://csrc.nist.gov/csrc/media/publications/fips/140/2/final/documents/fips1402.pdf","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-284","Authors":["Paul F. Roberts"],"Title":"Microsoft Scraps Old Encryption in New Code","PublicationYear":"2005","PublicationMonth":"09","PublicationDay":"15","URL":"https://www.eweek.com/security/microsoft-scraps-old-encryption-in-new-code/","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-7","Section":"Chapter 8, \"Cryptographic Foibles\" Page 259","Authors":["Michael Howard","David LeBlanc"],"Title":"Writing Secure Code","Edition":"2nd Edition","PublicationYear":"2002","PublicationMonth":"12","PublicationDay":"04","Publisher":"Microsoft Press","URL":"https://www.microsoftpressstore.com/store/writing-secure-code-9780735617223"},{"ExternalReferenceID":"REF-44","Section":"\"Sin 21: Using the Wrong Cryptography.\" Page 315","Authors":["Michael Howard","David LeBlanc","John Viega"],"Title":"24 Deadly Sins of Software Security","Publication":"McGraw-Hill","PublicationYear":"2010"},{"ExternalReferenceID":"REF-287","Authors":["Johannes Ullrich"],"Title":"Top 25 Series - Rank 24 - Use of a Broken or Risky Cryptographic Algorithm","PublicationYear":"2010","PublicationMonth":"03","PublicationDay":"25","Publisher":"SANS Software Security Institute","URL":"https://www.sans.org/blog/top-25-series-use-of-a-broken-or-risky-cryptographic-algorithm/","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-62","Section":"Chapter 2, \"Insufficient or Obsolete Encryption\", Page 44","Authors":["Mark Dowd","John McDonald","Justin Schuh"],"Title":"The Art of Software Security Assessment","Edition":"1st Edition","PublicationYear":"2006","Publisher":"Addison Wesley"},{"ExternalReferenceID":"REF-962","Section":"ASCSM-CWE-327","Authors":["Object Management Group (OMG)"],"Title":"Automated Source Code Security Measure (ASCSM)","PublicationYear":"2016","PublicationMonth":"01","URL":"http://www.omg.org/spec/ASCSM/1.0/"},{"ExternalReferenceID":"REF-18","Authors":["Secure Software, Inc."],"Title":"The CLASP Application Security Process","PublicationYear":"2005","URL":"https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf"},{"ExternalReferenceID":"REF-1192","Authors":["Information Technology Laboratory, National Institute of Standards and Technology"],"Title":"FIPS PUB 140-3: SECURITY REQUIREMENTS FOR CRYPTOGRAPHIC MODULES","PublicationYear":"2019","PublicationMonth":"03","PublicationDay":"22","URL":"https://csrc.nist.gov/publications/detail/fips/140/3/final"},{"ExternalReferenceID":"REF-1283","Authors":["Forescout Vedere Labs"],"Title":"OT:ICEFALL: The legacy of \"insecure by design\" and its implications for certifications and risk management","PublicationYear":"2022","PublicationMonth":"06","PublicationDay":"20","URL":"https://www.forescout.com/resources/ot-icefall-report/"}],"Notes":[{"Type":"Maintenance","Note":"Since CWE 4.4, various cryptography-related entries, including CWE-327 and CWE-1240, have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing."},{"Type":"Maintenance","Note":"The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CLASP","SubmissionDate":"2006-07-19"},{"Type":"Modification","ModificationOrganization":"Veracode","ModificationDate":"2008-08-15","ModificationComment":"Suggested OWASP Top Ten 2004 mapping"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Background_Details, Common_Consequences, Description, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-01-12","ModificationComment":"updated Demonstrative_Examples, Description, Observed_Examples, Potential_Mitigations, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-03-10","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-07-27","ModificationComment":"updated Maintenance_Notes, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-10-29","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-12-28","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-02-16","ModificationComment":"updated Detection_Factors, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-04-05","ModificationComment":"updated Applicable_Platforms, Potential_Mitigations, Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-06-21","ModificationComment":"updated Common_Consequences, Detection_Factors, Potential_Mitigations, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-09-27","ModificationComment":"updated Potential_Mitigations, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-03-29","ModificationComment":"updated Demonstrative_Examples, Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Potential_Mitigations, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated References, Related_Attack_Patterns, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2013-02-21","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-02-18","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-06-23","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Demonstrative_Examples, Detection_Factors, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2015-12-07","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-01-19","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Demonstrative_Examples, Likelihood_of_Exploit, Modes_of_Introduction, References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2018-03-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Related_Attack_Patterns, Relationships, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Applicable_Platforms, Detection_Factors, Maintenance_Notes, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Maintenance_Notes, Potential_Mitigations, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Demonstrative_Examples, Observed_Examples, References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Applicable_Platforms, Background_Details, Demonstrative_Examples, Description, Maintenance_Notes, Modes_of_Introduction, Observed_Examples, Potential_Mitigations, References, Taxonomy_Mappings, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes, Relationships"},{"Type":"Contribution","ContributionName":"Parbati K. Manna","ContributionOrganization":"Intel Corporation","ContributionDate":"2019-12-10","ContributionComment":"Provide a hardware-specific submission whose contents were integrated into this entry, affecting extended description, applicable platforms, demonstrative examples, and mitigations","ContributionType":"Content"},{"Type":"Rename","PreviousEntryName":"Using a Broken or Risky Cryptographic Algorithm","Date":"2008-04-11"}]}