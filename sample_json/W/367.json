{"ID":"367","Name":"Time-of-check Time-of-use (TOCTOU) Race Condition","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.","ExtendedDescription":"This weakness can be security-relevant when an attacker can influence the state of the resource between check and use. This can happen with shared resources such as files, memory, or even variables in multithreaded programs.","LikelihoodOfExploit":"Medium","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"362","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"362","ViewID":"1003","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"AlternateTerms":[{"Term":"TOCTTOU","Description":"The TOCTTOU acronym expands to \"Time Of Check To Time Of Use\"."},{"Term":"TOCCTOU","Description":"The TOCCTOU acronym is most likely a typo of TOCTTOU, but it has been used in some influential documents, so the typo is repeated fairly frequently."}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Integrity","Other"],"Impact":["Alter Execution Logic","Unexpected State"],"Note":"The attacker can gain access to otherwise unauthorized resources."},{"Scope":["Integrity","Other"],"Impact":["Modify Application Data","Modify Files or Directories","Modify Memory","Other"],"Note":"Race conditions such as this kind may be employed to gain read or write access to resources which are not normally readable or writable by the user in question."},{"Scope":["Integrity","Other"],"Impact":["Other"],"Note":"The resource in question, or other resources (through the corrupted one), may be changed in undesirable ways by a malicious user."},{"Scope":["Non-Repudiation"],"Impact":["Hide Activities"],"Note":"If a file or other resource is written in this method, as opposed to in a valid way, logging of the activity may not occur."},{"Scope":["Non-Repudiation","Other"],"Impact":["Other"],"Note":"In some cases it may be possible to delete files a malicious user might not otherwise have access to, such as log files."}],"DetectionMethods":[{"DetectionMethodID":"DM-14","Method":"Automated Static Analysis","Description":"Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"The most basic advice for TOCTOU vulnerabilities is to not perform a check before the use. This does not resolve the underlying issue of the execution of a function on a resource whose state and identity cannot be assured, but it does help to limit the false sense of security given by the check."},{"Phase":["Implementation"],"Description":"When the file being altered is owned by the current user and group, set the effective gid and uid to that of the current user and group when executing this statement."},{"Phase":["Architecture and Design"],"Description":"Limit the interleaving of operations on files from multiple processes."},{"Phase":["Implementation","Architecture and Design"],"Description":"If you cannot perform operations atomically and you must share access to the resource between multiple processes or threads, then try to limit the amount of time (CPU cycles) between the check and use of the resource. This will not fix the problem, but it could make it more difficult for an attack to succeed."},{"Phase":["Implementation"],"Description":"Recheck the resource after the use call to verify that the action was taken appropriately."},{"Phase":["Architecture and Design"],"Description":"Ensure that some environmental locking mechanism can be used to protect resources effectively."},{"Phase":["Implementation"],"Description":"Ensure that locking occurs before the check, as opposed to afterwards, such that the resource, as checked, is the same as it is when in use."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"The following code checks a file, then updates its contents."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tstruct stat *sb;\n\t...\n\tlstat(\"...\",sb); // it has not been updated since the last time it was read\n\tprintf(\"stated file\\n\");\n\tif (sb-\u003est_mtimespec==...){\n\t\tprint(\"Now updating things\\n\");\n\t\tupdateThings();\n\t}\n```"},{"BodyText":"Potentially the file could have been updated between the time of the check and the lstat, especially since the printf has latency."}]},{"Entries":[{"IntroText":"The following code is from a program installed setuid root. The program performs certain file operations on behalf of non-privileged users, and uses access checks to ensure that it does not use its root privileges to perform operations that should otherwise be unavailable the current user. The program uses the access() system call to check if the person running the program has permission to access the specified file before it opens the file and performs the necessary operations."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tif(!access(file,W_OK)) {\n\t\tf = fopen(file,\"w+\");\n\t\toperate(f);\n\t\t...\n\t}\n\telse {\n\t\t\tfprintf(stderr,\"Unable to open file %s.\\n\",file);\n\t}\n```"},{"BodyText":"The call to access() behaves as expected, and returns 0 if the user running the program has the necessary permissions to write to the file, and -1 otherwise. However, because both access() and fopen() operate on filenames rather than on file handles, there is no guarantee that the file variable still refers to the same file on disk when it is passed to fopen() that it did when it was passed to access(). If an attacker replaces file after the call to access() with a symbolic link to a different file, the program will use its root privileges to operate on the file even if it is a file that the attacker would otherwise be unable to modify. By tricking the program into performing an operation that would otherwise be impermissible, the attacker has gained elevated privileges. This type of vulnerability is not limited to programs with root privileges. If the application is capable of performing any operation that the attacker would not otherwise be allowed perform, then it is a possible target."}]},{"ID":"DX-49","Entries":[{"IntroText":"This code prints the contents of a file if a user has permission."},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n\tfunction readFile($filename){\n\t\t\t$user = getCurrentUser();\n```\n//resolve file if its a symbolic link* \n\t\t\tif(is_link($filename)){\n\t\t\t```\n\t\t\t\t$filename = readlink($filename);\n\t\t\t}\n\t\t\tif(fileowner($filename) == $user){\n\t\t\t\techo file_get_contents($realFile);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\techo 'Access denied';\n\t\t\t\treturn false;\n\t\t\t}\n\t}\n```"},{"BodyText":"This code attempts to resolve symbolic links before checking the file and printing its contents. However, an attacker may be able to change the file from a real file to a symbolic link between the calls to is_link() and file_get_contents(), allowing the reading of arbitrary files. Note that this code fails to log the attempted access (CWE-778)."}]},{"Entries":[{"IntroText":"This example is adapted from [REF-18]. Assume that this code block is invoked from multiple threads. The switch statement will execute different code depending on the time when MYFILE.txt was last changed."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\t #include \u003csys/types.h\u003e\n\t #include \u003csys/stat.h\u003e\n\t ...\n\t struct stat sb;\n\t stat(\"MYFILE.txt\",\u0026sb);\n\t printf(\"file change time: %d\\n\",sb-\u003est_ctime);\n\t switch(sb-\u003est_ctime % 2){\n\t\t case 0: printf(\"Option 1\\n\"); break;\n\t\t case 1: printf(\"Option 2\\n\"); break;\n\t\t default: printf(\"this should be unreachable?\\n\"); break;\n\t}\n```"},{"BodyText":"If this code block were executed within multiple threads, and MYFILE.txt changed between the operation of one thread and another, then the switch could produce different, possibly unexpected results."}]}],"ObservedExamples":[{"Reference":"CVE-2015-1743","Description":"TOCTOU in sandbox process allows installation of untrusted browser add-ons by replacing a file after it has been verified, but before it is executed","Link":"https://www.cve.org/CVERecord?id=CVE-2015-1743"},{"Reference":"CVE-2003-0813","Description":"A multi-threaded race condition allows remote attackers to cause a denial of service (crash or reboot) by causing two threads to process the same RPC request, which causes one thread to use memory after it has been freed.","Link":"https://www.cve.org/CVERecord?id=CVE-2003-0813"},{"Reference":"CVE-2004-0594","Description":"PHP flaw allows remote attackers to execute arbitrary code by aborting execution before the initialization of key data structures is complete.","Link":"https://www.cve.org/CVERecord?id=CVE-2004-0594"},{"Reference":"CVE-2008-2958","Description":"chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-2958"},{"Reference":"CVE-2008-1570","Description":"chain: time-of-check time-of-use (TOCTOU) race condition in program allows bypass of protection mechanism that was designed to prevent symlink attacks.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-1570"}],"TaxonomyMappings":[{"TaxonomyName":"PLOVER","EntryName":"Time-of-check Time-of-use race condition"},{"TaxonomyName":"7 Pernicious Kingdoms","EntryName":"File Access Race Conditions: TOCTOU"},{"TaxonomyName":"CLASP","EntryName":"Time of check, time of use race condition"},{"TaxonomyName":"CLASP","EntryName":"Race condition in switch"},{"TaxonomyName":"CERT C Secure Coding","EntryID":"FIO01-C","EntryName":"Be careful using functions that use file names for identification"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP20","EntryName":"Race Condition Window"}],"RelatedAttackPatterns":["27","29"],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-18","Section":"5.4.6 Race condition in switch","Authors":["Secure Software, Inc."],"Title":"The CLASP Application Security Process","PublicationYear":"2005","URL":"https://cwe.mitre.org/documents/sources/TheCLASPApplicationSecurityProcess.pdf"},{"ExternalReferenceID":"REF-367","Authors":["Dan Tsafrir","Tomer Hertz","David Wagner","Dilma Da Silva"],"Title":"Portably Solving File TOCTTOU Races with Hardness Amplification","PublicationYear":"2008","PublicationMonth":"02","PublicationDay":"28","URL":"https://www.usenix.org/legacy/events/fast08/tech/tsafrir.html","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-44","Section":"\"Sin 13: Race Conditions.\" Page 205","Authors":["Michael Howard","David LeBlanc","John Viega"],"Title":"24 Deadly Sins of Software Security","Publication":"McGraw-Hill","PublicationYear":"2010"},{"ExternalReferenceID":"REF-62","Section":"Chapter 9, \"TOCTOU\", Page 527","Authors":["Mark Dowd","John McDonald","Justin Schuh"],"Title":"The Art of Software Security Assessment","Edition":"1st Edition","PublicationYear":"2006","Publisher":"Addison Wesley"}],"Notes":[{"Type":"Relationship","Note":"TOCTOU issues do not always involve symlinks, and not every symlink issue is a TOCTOU problem."},{"Type":"Research Gap","Note":"Non-symlink TOCTOU issues are not reported frequently, but they are likely to occur in code that attempts to be secure."}],"ContentHistory":[{"Type":"Submission","SubmissionName":"PLOVER","SubmissionDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationOrganization":"KDM Analytics","ModificationDate":"2008-08-01","ModificationComment":"added/updated white box definitions"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Common_Consequences, Relationships, Other_Notes, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-10-14","ModificationComment":"updated Description, Name, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-11-24","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-01-12","ModificationComment":"updated Alternate_Terms, Observed_Examples, Other_Notes, References, Relationship_Notes, Relationships, Research_Gaps"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"KDM Analytics","ModificationDate":"2009-07-17","ModificationComment":"Improved the White_Box_Definition"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-07-27","ModificationComment":"updated White_Box_Definitions"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-09-27","ModificationComment":"updated Description, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Alternate_Terms, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Demonstrative_Examples, Observed_Examples, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Demonstrative_Examples, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Demonstrative_Examples, Likelihood_of_Exploit, References, Relationships, Taxonomy_Mappings, White_Box_Definitions"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Demonstrative_Examples, References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-06-28","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Detection_Factors, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"Time-of-check Time-of-use Race Condition","Date":"2008-10-14"}]}