{"ID":"491","Name":"Public cloneable() Method Without Final ('Object Hijack')","Abstraction":"Variant","Structure":"Simple","Status":"Draft","Description":"A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"668","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Name":"Java","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"}],"CommonConsequences":[{"Scope":["Integrity","Other"],"Impact":["Unexpected State","Varies by Context"]}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Make the cloneable() method final."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"In this example, a public class \"BankAccount\" implements the cloneable() method which declares \"Object clone(string accountnumber)\":"},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tpublic class BankAccount implements Cloneable{\n\t\t\tpublic Object clone(String accountnumber) throws\n\t\t\tCloneNotSupportedException\n\t\t\t{\n\t\t\t\t\tObject returnMe = new BankAccount(account number);\n\t\t\t\t\t...\n\t\t\t}\n\t}\n```"}]},{"Entries":[{"IntroText":"In the example below, a clone() method is defined without being declared final."},{"Nature":"Bad","Language":"Java","ExampleCode":"```\n\tprotected Object clone() throws CloneNotSupportedException {\n\t\t...\n\t}\n```"}]}],"TaxonomyMappings":[{"TaxonomyName":"7 Pernicious Kingdoms","EntryName":"Mobile Code: Object Hijack"},{"TaxonomyName":"The CERT Oracle Secure Coding Standard for Java (2011)","EntryID":"OBJ07-J","EntryName":"Sensitive classes must not let themselves be copied"},{"TaxonomyName":"Software Fault Patterns","EntryID":"SFP28","EntryName":"Unexpected access points"}],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-6","Authors":["Katrina Tsipenyuk","Brian Chess","Gary McGraw"],"Title":"Seven Pernicious Kingdoms: A Taxonomy of Software Security Errors","Publication":"NIST Workshop on Software Security Assurance Tools Techniques and Metrics","PublicationYear":"2005","PublicationMonth":"11","PublicationDay":"07","Publisher":"NIST","URL":"https://samate.nist.gov/SSATTM_Content/papers/Seven%20Pernicious%20Kingdoms%20-%20Taxonomy%20of%20Sw%20Security%20Errors%20-%20Tsipenyuk%20-%20Chess%20-%20McGraw.pdf"},{"ExternalReferenceID":"REF-453","Authors":["OWASP"],"Title":"OWASP , Attack Category : Mobile code: object hijack","URL":"http://www.owasp.org/index.php/Mobile_code:_object_hijack"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"7 Pernicious Kingdoms","SubmissionDate":"2006-07-19"},{"Type":"Modification","ModificationName":"Sean Eidemiller","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"added/updated demonstrative examples"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated References, Demonstrative_Example, Potential_Mitigations, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, References, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Name"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-07-27","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"Mobile Code: Object Hijack","Date":"2008-04-11"},{"Type":"Rename","PreviousEntryName":"Public cloneable() Method Without Final (aka 'Object Hijack')","Date":"2009-05-27"}]}