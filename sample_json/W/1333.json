{"ID":"1333","Name":"Inefficient Regular Expression Complexity","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.","ExtendedDescription":"Some regular expression engines have a feature called \"backtracking\". If the token cannot match, the engine \"backtracks\" to a position that may result in a different token that can match.\n Backtracking becomes a weakness if all of these conditions are met:\n\n\n  - The number of possible backtracking attempts are exponential relative to the length of the input.\n\n  - The input can fail to match the regular expression.\n\n  - The input can be long enough.\n\n Attackers can create crafted inputs that intentionally cause the regular expression to use excessive backtracking in a way that causes the CPU consumption to spike. ","LikelihoodOfExploit":"High","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"407","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"407","ViewID":"1003","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"}],"AlternateTerms":[{"Term":"ReDoS","Description":"ReDoS is an abbreviation of \"Regular expression Denial of Service\"."},{"Term":"Regular Expression Denial of Service","Description":"While this term is attack-focused, this is commonly used to describe the weakness."},{"Term":"Catastrophic backtracking","Description":"This term is used to describe the behavior of the regular expression as a negative technical impact."}],"ModesOfIntroduction":[{"Phase":"Implementation","Note":"A RegEx can be easy to create and read using unbounded matching characters, but the programmer might not consider the risk of excessive backtracking."}],"CommonConsequences":[{"Scope":["Availability"],"Impact":["DoS: Resource Consumption (CPU)"],"Likelihood":["High"]}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"Use regular expressions that do not support backtracking, e.g. by removing nested quantifiers.","Effectiveness":"High","EffectivenessNotes":"This is one of the few effective solutions when using user-provided regular expressions."},{"Phase":["System Configuration"],"Description":"Set backtracking limits in the configuration of the regular expression implementation, such as PHP's pcre.backtrack_limit. Also consider limits on execution time for the process.","Effectiveness":"Moderate"},{"Phase":["Implementation"],"Description":"Do not use regular expressions with untrusted input. If regular expressions must be used, avoid using backtracking in the expression.","Effectiveness":"High"},{"Phase":["Implementation"],"Description":"Limit the length of the input that the regular expression will process.","Effectiveness":"Moderate"}],"DemonstrativeExamples":[{"ID":"DX-158","Entries":[{"IntroText":"This example attempts to check if an input string is a \"sentence\" [REF-1164]."},{"Nature":"Bad","Language":"JavaScript","ExampleCode":"var test_string = \"Bad characters: $@#\";\n var bad_pattern = /^(\\w+\\s?)*$/i;\n var result = test_string.search(bad_pattern);"},{"BodyText":"The regular expression has a vulnerable backtracking clause inside (\\w+\\s?)*$ which can be triggered to cause a Denial of Service by processing particular phrases.\n\n\nTo fix the backtracking problem, backtracking is removed with the ?= portion of the expression which changes it to a lookahead and the \\2 which prevents the backtracking. The modified example is:"},{"Nature":"Good","Language":"JavaScript","ExampleCode":"var test_string = \"Bad characters: $@#\";\n var good_pattern = /^((?=(\\w+))\\2\\s?)*$/i;\n var result = test_string.search(good_pattern);"},{"BodyText":"Note that [REF-1164] has a more thorough (and lengthy) explanation of everything going on within the RegEx."}]},{"Entries":[{"IntroText":"This example attempts to check if an input string is a \"sentence\" and is modified for Perl [REF-1164]."},{"Nature":"Bad","Language":"Perl","ExampleCode":"my $test_string = \"Bad characters: \\$\\@\\#\";\n my $bdrslt = $test_string;\n $bdrslt =~ /^(\\w+\\s?)*$/i;"},{"BodyText":"The regular expression has a vulnerable backtracking clause inside (\\w+\\s?)*$ which can be triggered to cause a Denial of Service by processing particular phrases.\n\n\nTo fix the backtracking problem, backtracking is removed with the ?= portion of the expression which changes it to a lookahead and the \\2 which prevents the backtracking. The modified example is:"},{"Nature":"Good","Language":"Perl","ExampleCode":"my $test_string = \"Bad characters: \\$\\@\\#\";\n my $gdrslt = $test_string;\n $gdrslt =~ /^((?=(\\w+))\\2\\s?)*$/i;"},{"BodyText":"Note that [REF-1164] has a more thorough (and lengthy) explanation of everything going on within the RegEx."}]}],"ObservedExamples":[{"Reference":"CVE-2020-5243","Description":"server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.","Link":"https://www.cve.org/CVERecord?id=CVE-2020-5243"},{"Reference":"CVE-2021-21317","Description":"npm package for user-agent parser prone to ReDoS due to overlapping capture groups","Link":"https://www.cve.org/CVERecord?id=CVE-2021-21317"},{"Reference":"CVE-2019-16215","Description":"Markdown parser uses inefficient regex when processing a message, allowing users to cause CPU consumption and delay preventing processing of other messages.","Link":"https://www.cve.org/CVERecord?id=CVE-2019-16215"},{"Reference":"CVE-2019-6785","Description":"Long string in a version control product allows DoS due to an inefficient regex.","Link":"https://www.cve.org/CVERecord?id=CVE-2019-6785"},{"Reference":"CVE-2019-12041","Description":"Javascript code allows ReDoS via a long string due to excessive backtracking.","Link":"https://www.cve.org/CVERecord?id=CVE-2019-12041"},{"Reference":"CVE-2015-8315","Description":"ReDoS when parsing time.","Link":"https://www.cve.org/CVERecord?id=CVE-2015-8315"},{"Reference":"CVE-2015-8854","Description":"ReDoS when parsing documents.","Link":"https://www.cve.org/CVERecord?id=CVE-2015-8854"},{"Reference":"CVE-2017-16021","Description":"ReDoS when validating URL.","Link":"https://www.cve.org/CVERecord?id=CVE-2017-16021"}],"RelatedAttackPatterns":["492"],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-1180","Authors":["Scott A. Crosby"],"Title":"Regular Expression Denial of Service","PublicationYear":"2003","PublicationMonth":"08","URL":"https://web.archive.org/web/20031120114522/http://www.cs.rice.edu/~scrosby/hash/slides/USENIX-RegexpWIP.2.ppt"},{"ExternalReferenceID":"REF-1162","Authors":["Jan Goyvaerts"],"Title":"Runaway Regular Expressions: Catastrophic Backtracking","PublicationYear":"2019","PublicationMonth":"12","PublicationDay":"22","URL":"https://www.regular-expressions.info/catastrophic.html"},{"ExternalReferenceID":"REF-1163","Authors":["Adar Weidman"],"Title":"Regular expression Denial of Service - ReDoS","URL":"https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"},{"ExternalReferenceID":"REF-1164","Authors":["Ilya Kantor"],"Title":"Catastrophic backtracking","PublicationYear":"2020","PublicationMonth":"12","PublicationDay":"13","URL":"https://javascript.info/regexp-catastrophic-backtracking"},{"ExternalReferenceID":"REF-1165","Authors":["Cristian-Alexandru Staicu","Michael Pradel"],"Title":"Freezing the Web: A Study of ReDoS Vulnerabilities in JavaScript-based Web Servers","Publication":"USENIX Security Symposium","PublicationYear":"2018","PublicationMonth":"07","PublicationDay":"11","URL":"https://www.usenix.org/system/files/conference/usenixsecurity18/sec18-staicu.pdf"},{"ExternalReferenceID":"REF-1166","Authors":["James C. Davis","Christy A. Coghlan","Francisco Servant","Dongyoon Lee"],"Title":"The Impact of Regular Expression Denial of Service (ReDoS) in Practice: An Empirical Study at the Ecosystem Scale","PublicationYear":"2018","PublicationMonth":"08","PublicationDay":"01","URL":"https://fservant.github.io/papers/Davis_Coghlan_Servant_Lee_ESECFSE18.pdf","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-1167","Authors":["James Davis"],"Title":"The Regular Expression Denial of Service (ReDoS) cheat-sheet","PublicationYear":"2020","PublicationMonth":"05","PublicationDay":"23","URL":"https://levelup.gitconnected.com/the-regular-expression-denial-of-service-redos-cheat-sheet-a78d0ed7d865"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"Anonymous External Contributor","SubmissionDate":"2021-01-17"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Observed_Examples, Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Observed_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Demonstrative_Examples, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}