{"ID":"1269","Name":"Product Released in Non-Release Configuration","Abstraction":"Base","Structure":"Simple","Status":"Incomplete","Description":"The product released to market is released in pre-production or manufacturing configuration.","ExtendedDescription":"\n\nProducts in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to:\n\n\n  - Ability to override/bypass various cryptographic checks (including authentication, authorization, and integrity)\n\n  - Ability to read/write/modify/dump internal state (including registers and memory)\n\n  - Ability to change system configurations\n\n  - Ability to run hidden or private commands that are not allowed during production (as they expose IP).\n\nThe above is by no means an exhaustive list, but it alludes to the greater capability and the greater state of vulnerability of a product during it's preproduction or manufacturing state.\n\nComplexity increases when multiple parties are involved in executing the tests before the final production version. For example, a chipmaker might fabricate a chip and run its own preproduction tests, following which the chip would be delivered to the Original Equipment Manufacturer (OEM), who would now run a second set of different preproduction tests on the same chip. Only after both of these sets of activities are complete, can the overall manufacturing phase be called \"complete\" and have the \"Manufacturing Complete\" fuse blown. However, if the OEM forgets to blow the Manufacturing Complete fuse, then the system remains in the manufacturing stage, rendering the system both exposed and vulnerable.\n","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"693","ViewID":"1000","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Name":"VHDL","Prevalence":"Undetermined"},{"Type":"Language","Name":"Verilog","Prevalence":"Undetermined"},{"Type":"Language","Class":"Compiled","Prevalence":"Undetermined"},{"Type":"Operating_System","Class":"Not OS-Specific","Prevalence":"Undetermined"},{"Type":"Architecture","Class":"Not Architecture-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Name":"Other","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Not Technology-Specific","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Implementation"},{"Phase":"Integration"},{"Phase":"Manufacturing"}],"CommonConsequences":[{"Scope":["Confidentiality","Integrity","Availability","Access Control","Accountability","Authentication","Authorization","Non-Repudiation"],"Impact":["Other"],"Likelihood":["High"]}],"PotentialMitigations":[{"Phase":["Implementation"],"Description":"Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown)."},{"Phase":["Integration"],"Description":"Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown)."},{"Phase":["Manufacturing"],"Description":"Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets blown)."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"This example shows what happens when a preproduction system is made available for production."},{"Nature":"Bad","ExampleCode":"Suppose the chipmaker has a way of scanning all the internal memory (containing chipmaker-level secrets) during the manufacturing phase, and the way the chipmaker or the Original Equipment Manufacturer (OEM) marks the end of the manufacturing phase is by blowing a Manufacturing Complete fuse. Now, suppose that whoever blows the Manufacturing Complete fuse inadvertently forgets to execute the step to blow the fuse."},{"BodyText":"An attacker will now be able to scan all the internal memory (containing chipmaker-level secrets)."},{"Nature":"Good","ExampleCode":"Blow the Manufacturing Complete fuse."}]}],"ObservedExamples":[{"Reference":"CVE-2019-13945","Description":"Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATIC S7-200 SMART CPU family (All versions). There is an access mode used during manufacturing of S7-1200 CPUs that allows additional diagnostic functionality. The security vulnerability could be exploited by an attacker with physical access to the UART interface during boot process. At the time of advisory publication, no public exploitation of this security vulnerability was known.","Link":"https://www.cve.org/CVERecord?id=CVE-2019-13945"},{"Reference":"CVE-2018-4251","Description":"Laptops with Intel chipsets were found to be running in Manufacturing Mode. After this information was reported to the OEM, the vulnerability (CVE-2018-4251) was patched disallowing access to the interface.","Link":"https://www.cve.org/CVERecord?id=CVE-2018-4251"}],"RelatedAttackPatterns":["439"],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-1103","Authors":["Lucian Armasu"],"Title":"Intel ME's Undocumented Manufacturing Mode Suggests CPU Hacking Risks","PublicationYear":"2018","PublicationMonth":"10","PublicationDay":"03","URL":"https://www.tomshardware.com/news/intel-me-cpu-undocumented-manufacturing-mode,37883.html"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"Arun Kanuparthi, Hareesh Khattri, Parbati Kumar Manna, Narasimha Kumar V Mangipudi","SubmissionOrganization":"Intel Corporation","SubmissionDate":"2020-05-31"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Description, Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"}]}