{"ID":"862","Name":"Missing Authorization","Abstraction":"Class","Structure":"Simple","Status":"Incomplete","Description":"The product does not perform an authorization check when an actor attempts to access a resource or perform an action.","ExtendedDescription":"\n\nAssuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.\n\n\nWhen access control checks are not applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposures, denial of service, and arbitrary code execution.\n","LikelihoodOfExploit":"High","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"285","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"284","ViewID":"1340","Ordinal":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Name":"Web Server","Prevalence":"Often"},{"Type":"Technology","Name":"Database Server","Prevalence":"Often"}],"BackgroundDetails":["An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three classes for file access: owner, group owner, and all other users where each class has a separate set of rights. In Windows NT, there are four basic types of permissions for files: \"No access\", \"Read access\", \"Change access\", and \"Full control\". Windows NT extends the concept of three types of users in UNIX to include a list of users and groups along with their associated permissions. A user can create an object (file) and assign specified permissions to that object."],"AlternateTerms":[{"Term":"AuthZ","Description":"\"AuthZ\" is typically used as an abbreviation of \"authorization\" within the web application security community. It is distinct from \"AuthN\" (or, sometimes, \"AuthC\") which is an abbreviation of \"authentication.\" The use of \"Auth\" as an abbreviation is discouraged, since it could be used for either authentication or authorization."}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"\n\nOMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.\n\n\nAuthorization weaknesses may arise when a single-user application is ported to a multi-user environment.\n"},{"Phase":"Implementation","Note":"A developer may introduce authorization weaknesses because of a lack of understanding about the underlying technologies. For example, a developer may assume that attackers cannot modify certain inputs such as headers or cookies."},{"Phase":"Operation"}],"CommonConsequences":[{"Scope":["Confidentiality"],"Impact":["Read Application Data","Read Files or Directories"],"Note":"An attacker could read sensitive data, either by reading the data directly from a data store that is not restricted, or by accessing insufficiently-protected, privileged functionality to read the data."},{"Scope":["Integrity"],"Impact":["Modify Application Data","Modify Files or Directories"],"Note":"An attacker could modify sensitive data, either by writing the data directly to a data store that is not restricted, or by accessing insufficiently-protected, privileged functionality to write the data."},{"Scope":["Access Control"],"Impact":["Gain Privileges or Assume Identity","Bypass Protection Mechanism"],"Note":"An attacker could gain privileges by modifying or reading critical data directly, or by accessing privileged functionality."}],"DetectionMethods":[{"DetectionMethodID":"DM-6","Method":"Automated Static Analysis","Description":"\n\nAutomated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries.\n\n\nGenerally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.\n","Effectiveness":"Limited"},{"Method":"Automated Dynamic Analysis","Description":"Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic."},{"Method":"Manual Analysis","Description":"\n\nThis weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n\n\nSpecifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms.\n","Effectiveness":"Moderate","EffectivenessNotes":"These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules. However, manual efforts might not achieve desired code coverage within limited time constraints."},{"Method":"Manual Static Analysis - Binary or Bytecode","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities \u0026 anomalies","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Automated Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner\n\t\tWeb Services Scanner\n\t\tDatabase Scanners","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Manual Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tHost Application Interface Scanner\n\t\tFuzz Tester\n\t\tFramework-based Fuzzer","Effectiveness":"SOAR Partial"},{"Method":"Manual Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)","Effectiveness":"SOAR Partial"},{"Method":"Automated Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer","Effectiveness":"SOAR Partial"},{"Method":"Architecture or Design Review","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)\n\t\tFormal Methods / Correct-By-Construction","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"\n\nDivide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) [REF-229] to enforce the roles at the appropriate boundaries.\n\n\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.\n"},{"Phase":["Architecture and Design"],"Description":"Ensure that access control checks are performed related to the business logic. These checks may be different than the access control checks that are applied to more generic resources such as files, connections, processes, memory, and database records. For example, a database may restrict access for medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor [REF-7]."},{"MitigationID":"MIT-4.4","Phase":["Architecture and Design"],"Strategy":"Libraries or Frameworks","Description":"\n\nUse a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n\n\nFor example, consider using authorization frameworks such as the JAAS Authorization Framework [REF-233] and the OWASP ESAPI Access Control feature [REF-45].\n"},{"Phase":["Architecture and Design"],"Description":"\n\nFor web applications, make sure that the access control mechanism is enforced correctly at the server side on every page. Users should not be able to access any unauthorized functionality or information by simply requesting direct access to that page.\n\n\nOne way to do this is to ensure that all pages containing sensitive information are not cached, and that all such pages restrict access to requests that are accompanied by an active and authenticated session token associated with a user who has the required permissions to access that page.\n"},{"Phase":["System Configuration","Installation"],"Description":"Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs."}],"DemonstrativeExamples":[{"ID":"DX-95","Entries":[{"IntroText":"This function runs an arbitrary SQL query on a given database, returning the result of the query."},{"Nature":"Bad","Language":"PHP","ExampleCode":"```\n\tfunction runEmployeeQuery($dbName, $name){\n\t\tmysql_select_db($dbName,$globalDbHandle) or die(\"Could not open Database\".$dbName);\n```\n//Use a prepared statement to avoid CWE-89* \n\t\t$preparedStatement = $globalDbHandle-\u003eprepare('SELECT * FROM employees WHERE name = :name');\n\t\t$preparedStatement-\u003eexecute(array(':name' =\u003e $name));\n\t\treturn $preparedStatement-\u003efetchAll();}\n\t\n\t */.../* \n\t\n\t$employeeRecord = runEmployeeQuery('EmployeeDB',$_GET['EmployeeName']);"},{"BodyText":"While this code is careful to avoid SQL Injection, the function does not confirm the user sending the query is authorized to do so. An attacker may be able to obtain sensitive employee information from the database."}]},{"ID":"DX-96","Entries":[{"IntroText":"The following program could be part of a bulletin board system that allows users to send private messages to each other. This program intends to authenticate the user before deciding whether a private message should be displayed. Assume that LookupMessageObject() ensures that the $id argument is numeric, constructs a filename based on that id, and reads the message details from that file. Also assume that the program stores all private messages for all users in the same directory."},{"Nature":"Bad","Language":"Perl","ExampleCode":"```\n\tsub DisplayPrivateMessage {\n\t\tmy($id) = @_;\n\t\tmy $Message = LookupMessageObject($id);\n\t\tprint \"From: \" . encodeHTML($Message-\u003e{from}) . \"\u003cbr\u003e\\n\";\n\t\tprint \"Subject: \" . encodeHTML($Message-\u003e{subject}) . \"\\n\";\n\t\tprint \"\u003chr\u003e\\n\";\n\t\tprint \"Body: \" . encodeHTML($Message-\u003e{body}) . \"\\n\";\n\t}\n\tmy $q = new CGI;\n```\n# For purposes of this example, assume that CWE-309 and* \n\t\n\t\n\t\n\t *# CWE-523 do not apply.* \n\tif (! AuthenticateUser($q-\u003eparam('username'), $q-\u003eparam('password'))) {\n\t```\n\t\tExitError(\"invalid username or password\");\n\t}\n\tmy $id = $q-\u003eparam('id');\n\tDisplayPrivateMessage($id);\n```"},{"BodyText":"While the program properly exits if authentication fails, it does not ensure that the message is addressed to the user. As a result, an authenticated attacker could provide any arbitrary identifier and read private messages that were intended for other users."},{"BodyText":"One way to avoid this problem would be to ensure that the \"to\" field in the message object matches the username of the authenticated user."}]}],"ObservedExamples":[{"Reference":"CVE-2022-24730","Description":"Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information","Link":"https://www.cve.org/CVERecord?id=CVE-2022-24730"},{"Reference":"CVE-2009-3168","Description":"Web application does not restrict access to admin scripts, allowing authenticated users to reset administrative passwords.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-3168"},{"Reference":"CVE-2009-3597","Description":"Web application stores database file under the web root with insufficient access control (CWE-219), allowing direct request.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-3597"},{"Reference":"CVE-2009-2282","Description":"Terminal server does not check authorization for guest access.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-2282"},{"Reference":"CVE-2008-5027","Description":"System monitoring software allows users to bypass authorization by creating custom forms.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-5027"},{"Reference":"CVE-2009-3781","Description":"Content management system does not check access permissions for private files, allowing others to view those files.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-3781"},{"Reference":"CVE-2008-6548","Description":"Product does not check the ACL of a page accessed using an \"include\" directive, allowing attackers to read unauthorized files.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-6548"},{"Reference":"CVE-2009-2960","Description":"Web application does not restrict access to admin scripts, allowing authenticated users to modify passwords of other users.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-2960"},{"Reference":"CVE-2009-3230","Description":"Database server does not use appropriate privileges for certain sensitive operations.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-3230"},{"Reference":"CVE-2009-2213","Description":"Gateway uses default \"Allow\" configuration for its authorization settings.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-2213"},{"Reference":"CVE-2009-0034","Description":"Chain: product does not properly interpret a configuration option for a system group, allowing users to gain privileges.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-0034"},{"Reference":"CVE-2008-6123","Description":"Chain: SNMP product does not properly parse a configuration option for which hosts are allowed to connect, allowing unauthorized IP addresses to connect.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-6123"},{"Reference":"CVE-2008-7109","Description":"Chain: reliance on client-side security (CWE-602) allows attackers to bypass authorization using a custom client.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-7109"},{"Reference":"CVE-2008-3424","Description":"Chain: product does not properly handle wildcards in an authorization policy list, allowing unintended access.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-3424"},{"Reference":"CVE-2005-1036","Description":"Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap","Link":"https://www.cve.org/CVERecord?id=CVE-2005-1036"},{"Reference":"CVE-2008-4577","Description":"ACL-based protection mechanism treats negative access rights as if they are positive, allowing bypass of intended restrictions.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-4577"},{"Reference":"CVE-2007-2925","Description":"Default ACL list for a DNS server does not set certain ACLs, allowing unauthorized DNS queries.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-2925"},{"Reference":"CVE-2006-6679","Description":"Product relies on the X-Forwarded-For HTTP header for authorization, allowing unintended access by spoofing the header.","Link":"https://www.cve.org/CVERecord?id=CVE-2006-6679"},{"Reference":"CVE-2005-3623","Description":"OS kernel does not check for a certain privilege before setting ACLs for files.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-3623"},{"Reference":"CVE-2005-2801","Description":"Chain: file-system code performs an incorrect comparison (CWE-697), preventing default ACLs from being properly applied.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-2801"},{"Reference":"CVE-2001-1155","Description":"Chain: product does not properly check the result of a reverse DNS lookup because of operator precedence (CWE-783), allowing bypass of DNS-based access restrictions.","Link":"https://www.cve.org/CVERecord?id=CVE-2001-1155"},{"Reference":"CVE-2020-17533","Description":"Chain: unchecked return value (CWE-252) of some functions for policy enforcement leads to authorization bypass (CWE-862)","Link":"https://www.cve.org/CVERecord?id=CVE-2020-17533"}],"TaxonomyMappings":[{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 2-1","EntryName":"Req 4.3.3.7"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 3-3","EntryName":"Req SR 2.1"},{"TaxonomyName":"ISA/IEC 62443","EntryID":"Part 4-2","EntryName":"Req CR 2.1"}],"RelatedAttackPatterns":["665"],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class and might have Base-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"References":[{"ExternalReferenceID":"REF-229","Authors":["NIST"],"Title":"Role Based Access Control and Role Based Security","URL":"https://csrc.nist.gov/projects/role-based-access-control","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-7","Section":"Chapter 4, \"Authorization\" Page 114; Chapter 6, \"Determining\n                  Appropriate Access Control\" Page 171","Authors":["Michael Howard","David LeBlanc"],"Title":"Writing Secure Code","Edition":"2nd Edition","PublicationYear":"2002","PublicationMonth":"12","PublicationDay":"04","Publisher":"Microsoft Press","URL":"https://www.microsoftpressstore.com/store/writing-secure-code-9780735617223"},{"ExternalReferenceID":"REF-231","Authors":["Frank Kim"],"Title":"Top 25 Series - Rank 5 - Improper Access Control (Authorization)","PublicationYear":"2010","PublicationMonth":"03","PublicationDay":"04","Publisher":"SANS Software Security Institute","URL":"https://www.sans.org/blog/top-25-series-rank-5-improper-access-control-authorization/","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-45","Authors":["OWASP"],"Title":"OWASP Enterprise Security API (ESAPI) Project","URL":"http://www.owasp.org/index.php/ESAPI"},{"ExternalReferenceID":"REF-233","Authors":["Rahul Bhattacharjee"],"Title":"Authentication using JAAS","URL":"https://javaranch.com/journal/2008/04/authentication-using-JAAS.html","URLDate":"2023-04-07"},{"ExternalReferenceID":"REF-62","Section":"Chapter 2, \"Common Vulnerabilities of Authorization\", Page 39","Authors":["Mark Dowd","John McDonald","Justin Schuh"],"Title":"The Art of Software Security Assessment","Edition":"1st Edition","PublicationYear":"2006","Publisher":"Addison Wesley"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2011-05-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-27","ModificationComment":"updated Demonstrative_Examples, Related_Attack_Patterns, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Potential_Mitigations, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Demonstrative_Examples, Observed_Examples, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-10-30","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-02-18","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Detection_Factors"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-01-19","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Modes_of_Introduction, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2018-03-27","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-12-10","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-03-15","ModificationComment":"updated Alternate_Terms, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated Observed_Examples, Related_Attack_Patterns, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-06-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description, Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated References, Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes, Relationships, Taxonomy_Mappings"},{"Type":"Contribution","ContributionName":"\"Mapping CWE to 62443\" Sub-Working Group","ContributionOrganization":"CWE-CAPEC ICS/OT SIG","ContributionDate":"2023-04-25","ContributionComment":"Suggested mappings to ISA/IEC 62443.","ContributionType":"Content"}]}