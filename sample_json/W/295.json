{"ID":"295","Name":"Improper Certificate Validation","Abstraction":"Base","Structure":"Simple","Status":"Draft","Description":"The product does not validate, or incorrectly validates, a certificate.","ExtendedDescription":"When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"287","ViewID":"1000","Ordinal":"Primary"},{"Nature":"ChildOf","CweID":"287","ViewID":"1003","Ordinal":"Primary"},{"Nature":"PeerOf","CweID":"322","ViewID":"1000"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Mobile","Prevalence":"Undetermined"}],"BackgroundDetails":["A certificate is a token that associates an identity (principal) to a cryptographic key. Certificates can be used to check if a public key belongs to the assumed owner."],"ModesOfIntroduction":[{"Phase":"Architecture and Design"},{"Phase":"Implementation","Note":"REALIZATION: This weakness is caused during implementation of an architectural security tactic."},{"Phase":"Implementation","Note":"When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinning is complete."}],"CommonConsequences":[{"Scope":["Integrity","Authentication"],"Impact":["Bypass Protection Mechanism","Gain Privileges or Assume Identity"]}],"DetectionMethods":[{"Method":"Automated Static Analysis - Binary or Bytecode","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBytecode Weakness Analysis - including disassembler + source code weakness analysis\n\t\tBinary Weakness Analysis - including disassembler + source code weakness analysis","Effectiveness":"SOAR Partial"},{"Method":"Manual Static Analysis - Binary or Bytecode","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tBinary / Bytecode disassembler - then use manual analysis for vulnerabilities \u0026 anomalies","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Automated Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tWeb Application Scanner","Effectiveness":"SOAR Partial"},{"Method":"Dynamic Analysis with Manual Results Interpretation","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tMan-in-the-middle attack tool","Effectiveness":"High"},{"Method":"Manual Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tFocused Manual Spotcheck - Focused manual analysis of source\n\t\tManual Source Code Review (not inspections)","Effectiveness":"High"},{"Method":"Automated Static Analysis - Source Code","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tCost effective for partial coverage:\n```\n\n\t\tSource code Weakness Analyzer\n\t\tContext-configured Source Code Weakness Analyzer","Effectiveness":"SOAR Partial"},{"Method":"Architecture or Design Review","Description":"\n\nAccording to SOAR, the following detection techniques may be useful:\n\n```\n\t\tHighly cost effective:\n```\n\n\t\tInspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.)","Effectiveness":"High"}],"PotentialMitigations":[{"Phase":["Architecture and Design","Implementation"],"Description":"Certificates should be carefully managed and checked to assure that data are encrypted with the intended owner's public key."},{"Phase":["Implementation"],"Description":"If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated before the certificate is pinned, including the hostname."}],"DemonstrativeExamples":[{"ID":"DX-121","Entries":[{"IntroText":"This code checks the certificate of a connected peer."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tif ((cert = SSL_get_peer_certificate(ssl)) \u0026\u0026 host)\n\t\tfoo=SSL_get_verify_result(ssl);\n\tif ((X509_V_OK==foo) || X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN==foo))\n```\n// certificate looks good, host can be trusted*"},{"BodyText":"In this case, because the certificate is self-signed, there was no external authority that could prove the identity of the host. The program could be communicating with a different system that is spoofing the host, e.g. by poisoning the DNS cache or using an Adversary-in-the-Middle (AITM) attack to modify the traffic from server to client."}]},{"ID":"DX-122","Entries":[{"IntroText":"The following OpenSSL code obtains a certificate and verifies it."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tcert = SSL_get_peer_certificate(ssl);\n\tif (cert \u0026\u0026 (SSL_get_verify_result(ssl)==X509_V_OK)) {\n```\n// do secret things* \n\t\t\t}"},{"BodyText":"Even though the \"verify\" step returns X509_V_OK, this step does not include checking the Common Name against the name of the host. That is, there is no guarantee that the certificate is for the desired host. The SSL connection could have been established with a malicious host that provided a valid certificate."}]},{"ID":"DX-123","Entries":[{"IntroText":"The following OpenSSL code ensures that there is a certificate and allows the use of expired certificates."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tif (cert = SSL_get_peer(certificate(ssl)) {\n\t\t\tfoo=SSL_get_verify_result(ssl);\n\t\t\tif ((X509_V_OK==foo) || (X509_V_ERR_CERT_HAS_EXPIRED==foo))\n```\n//do stuff*"},{"BodyText":"If the call to SSL_get_verify_result() returns X509_V_ERR_CERT_HAS_EXPIRED, this means that the certificate has expired. As time goes on, there is an increasing chance for attackers to compromise the certificate."}]},{"ID":"DX-124","Entries":[{"IntroText":"The following OpenSSL code ensures that there is a certificate before continuing execution."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n```\n// got a certificate, do secret things*"},{"BodyText":"Because this code does not use SSL_get_verify_results() to check the certificate, it could accept certificates that have been revoked (X509_V_ERR_CERT_REVOKED). The software could be communicating with a malicious host."}]},{"ID":"DX-125","Entries":[{"IntroText":"The following OpenSSL code ensures that the host has a certificate."},{"Nature":"Bad","Language":"C","ExampleCode":"```\n\tif (cert = SSL_get_peer_certificate(ssl)) {\n```\n// got certificate, host can be trusted* \n\t\t\t\n\t\t\t\n\t\t\t *//foo=SSL_get_verify_result(ssl);* \n\t\t\t\n\t\t\t\n\t\t\t *//if (X509_V_OK==foo) ...* \n\t\t\t}"},{"BodyText":"Note that the code does not call SSL_get_verify_result(ssl), which effectively disables the validation step that checks the certificate."}]}],"ObservedExamples":[{"Reference":"CVE-2019-12496","Description":"A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default.","Link":"https://www.cve.org/CVERecord?id=CVE-2019-12496"},{"Reference":"CVE-2014-1266","Description":"chain: incorrect \"goto\" in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple \"goto fail\" bug). CWE-705 (Incorrect Control Flow Scoping) -\u003e CWE-561 (Dead Code) -\u003e CWE-295 (Improper Certificate Validation) -\u003e CWE-393 (Return of Wrong Status Code) -\u003e CWE-300 (Channel Accessible by Non-Endpoint).","Link":"https://www.cve.org/CVERecord?id=CVE-2014-1266"},{"Reference":"CVE-2021-22909","Description":"Chain: router's firmware update procedure uses curl with \"-k\" (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-494).","Link":"https://www.cve.org/CVERecord?id=CVE-2021-22909"},{"Reference":"CVE-2008-4989","Description":"Verification function trusts certificate chains in which the last certificate is self-signed.","Link":"https://www.cve.org/CVERecord?id=CVE-2008-4989"},{"Reference":"CVE-2012-5821","Description":"Web browser uses a TLS-related function incorrectly, preventing it from verifying that a server's certificate is signed by a trusted certification authority (CA)","Link":"https://www.cve.org/CVERecord?id=CVE-2012-5821"},{"Reference":"CVE-2009-3046","Description":"Web browser does not check if any intermediate certificates are revoked.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-3046"},{"Reference":"CVE-2011-0199","Description":"Operating system does not check Certificate Revocation List (CRL) in some cases, allowing spoofing using a revoked certificate.","Link":"https://www.cve.org/CVERecord?id=CVE-2011-0199"},{"Reference":"CVE-2012-5810","Description":"Mobile banking application does not verify hostname, leading to financial loss.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-5810"},{"Reference":"CVE-2012-3446","Description":"Cloud-support library written in Python uses incorrect regular expression when matching hostname.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-3446"},{"Reference":"CVE-2009-2408","Description":"Web browser does not correctly handle '\\0' character (NUL) in Common Name, allowing spoofing of https sites.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-2408"},{"Reference":"CVE-2012-2993","Description":"Smartphone device does not verify hostname, allowing spoofing of mail services.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-2993"},{"Reference":"CVE-2012-5822","Description":"Application uses third-party library that does not validate hostname.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-5822"},{"Reference":"CVE-2012-5819","Description":"Cloud storage management application does not validate hostname.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-5819"},{"Reference":"CVE-2012-5817","Description":"Java library uses JSSE SSLSocket and SSLEngine classes, which do not verify the hostname.","Link":"https://www.cve.org/CVERecord?id=CVE-2012-5817"},{"Reference":"CVE-2010-1378","Description":"chain: incorrect calculation allows attackers to bypass certificate checks.","Link":"https://www.cve.org/CVERecord?id=CVE-2010-1378"},{"Reference":"CVE-2005-3170","Description":"LDAP client accepts certificates even if they are not from a trusted CA.","Link":"https://www.cve.org/CVERecord?id=CVE-2005-3170"},{"Reference":"CVE-2009-0265","Description":"chain: DNS server does not correctly check return value from the OpenSSL EVP_VerifyFinal function allows bypass of validation of the certificate chain.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-0265"},{"Reference":"CVE-2003-1229","Description":"chain: product checks if client is trusted when it intended to check if the server is trusted, allowing validation of signed code.","Link":"https://www.cve.org/CVERecord?id=CVE-2003-1229"},{"Reference":"CVE-2002-0862","Description":"Cryptographic API, as used in web browsers, mail clients, and other software, does not properly validate Basic Constraints.","Link":"https://www.cve.org/CVERecord?id=CVE-2002-0862"},{"Reference":"CVE-2009-1358","Description":"chain: OS package manager does not check properly check the return value, allowing bypass using a revoked certificate.","Link":"https://www.cve.org/CVERecord?id=CVE-2009-1358"}],"TaxonomyMappings":[{"TaxonomyName":"OWASP Top Ten 2004","EntryID":"A10","EntryName":"Insecure Configuration Management","MappingFit":"CWE More Specific"}],"RelatedAttackPatterns":["459","475"],"MappingNotes":{"Usage":"Allowed","Rationale":"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.","Comments":"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.","Reasons":["Acceptable-Use"]},"References":[{"ExternalReferenceID":"REF-243","Authors":["Sascha Fahl, Marian Harbach, Thomas Muders, Matthew Smith","Lars Baumgärtner, Bernd Freisleben"],"Title":"Why Eve and Mallory Love Android: An Analysis of Android SSL (In)Security","PublicationYear":"2012","PublicationMonth":"10","PublicationDay":"16","URL":"http://www2.dcsec.uni-hannover.de/files/android/p50-fahl.pdf"},{"ExternalReferenceID":"REF-244","Authors":["M. Bishop"],"Title":"Computer Security: Art and Science","PublicationYear":"2003","Publisher":"Addison-Wesley"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Community","SubmissionDate":"2006-07-19"},{"Type":"Modification","ModificationOrganization":"Veracode","ModificationDate":"2008-08-15","ModificationComment":"Suggested OWASP Top Ten 2004 mapping"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, Taxonomy_Mappings"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-10-14","ModificationComment":"updated Background_Details, Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-12-28","ModificationComment":"Converted from category to weakness class."},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2013-02-21","ModificationComment":"updated Applicable_Platforms, Common_Consequences, Description, Name, Observed_Examples, Potential_Mitigations, References, Relationships, Time_of_Introduction, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-06-23","ModificationComment":"updated Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Detection_Factors"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2015-12-07","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-01-19","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Modes_of_Introduction, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2018-03-27","ModificationComment":"updated Background_Details, Modes_of_Introduction, Potential_Mitigations, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-09-19","ModificationComment":"updated Demonstrative_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Applicable_Platforms, Demonstrative_Examples, Description, Observed_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-08-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-07-20","ModificationComment":"updated Demonstrative_Examples, Observed_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Observed_Examples, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Observed_Examples, References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Description, Modes_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"Certificate Issues","Date":"2013-02-21"}]}