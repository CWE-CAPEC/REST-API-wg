{"ID":"602","Name":"Client-Side Enforcement of Server-Side Security","Abstraction":"Class","Structure":"Simple","Status":"Draft","Description":"The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.","ExtendedDescription":"When the server relies on protection mechanisms placed on the client side, an attacker can modify the client-side behavior to bypass the protection mechanisms, resulting in potentially unexpected interactions between the client and server. The consequences will vary, depending on what the mechanisms are trying to protect.","LikelihoodOfExploit":"Medium","RelatedWeaknesses":[{"Nature":"ChildOf","CweID":"693","ViewID":"1000","Ordinal":"Primary"},{"Nature":"CanPrecede","CweID":"471","ViewID":"1000"},{"Nature":"PeerOf","CweID":"290","ViewID":"1000"},{"Nature":"PeerOf","CweID":"300","ViewID":"1000"}],"WeaknessOrdinalities":[{"Ordinality":"Primary"}],"ApplicablePlatforms":[{"Type":"Language","Class":"Not Language-Specific","Prevalence":"Undetermined"},{"Type":"Technology","Class":"ICS/OT","Prevalence":"Undetermined"},{"Type":"Technology","Class":"Mobile","Prevalence":"Undetermined"}],"ModesOfIntroduction":[{"Phase":"Architecture and Design","Note":"COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic."},{"Phase":"Architecture and Design","Note":"Consider a product that consists of two or more processes or nodes that must interact closely, such as a client/server model. If the product uses protection schemes in the client in order to defend from attacks against the server, and the server does not use the same schemes, then an attacker could modify the client in a way that bypasses those schemes. This is a fundamental design flaw that is primary to many weaknesses."}],"CommonConsequences":[{"Scope":["Access Control","Availability"],"Impact":["Bypass Protection Mechanism","DoS: Crash, Exit, or Restart"],"Note":"Client-side validation checks can be easily bypassed, allowing malformed or unexpected input to pass into the application, potentially as trusted data. This may lead to unexpected states, behaviors and possibly a resulting crash."},{"Scope":["Access Control"],"Impact":["Bypass Protection Mechanism","Gain Privileges or Assume Identity"],"Note":"Client-side checks for authentication can be easily bypassed, allowing clients to escalate their access levels and perform unintended actions."}],"PotentialMitigations":[{"Phase":["Architecture and Design"],"Description":"\n\nFor any security checks that are performed on the client side, ensure that these checks are duplicated on the server side. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.\n\n\nEven though client-side checks provide minimal benefits with respect to server-side security, they are still useful. First, they can support intrusion detection. If the server receives input that should have been rejected by the client, then it may be an indication of an attack. Second, client-side error-checking can provide helpful feedback to the user about the expectations for valid input. Third, there may be a reduction in server-side processing time for accidental input errors, although this is typically a small savings.\n"},{"Phase":["Architecture and Design"],"Description":"If some degree of trust is required between the two entities, then use integrity checking and strong authentication to ensure that the inputs are coming from a trusted source. Design the product so that this trust is managed in a centralized fashion, especially if there are complex or numerous communication channels, in order to reduce the risks that the implementer will mistakenly omit a check in a single code path."},{"Phase":["Testing"],"Description":"Use dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fault injection. The software's operation may slow down, but it should not become unstable, crash, or generate incorrect results."},{"Phase":["Testing"],"Description":"Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules."}],"DemonstrativeExamples":[{"Entries":[{"IntroText":"This example contains client-side code that checks if the user authenticated successfully before sending a command. The server-side code performs the authentication in one step, and executes the command in a separate step."},{"BodyText":"CLIENT-SIDE (client.pl)"},{"Nature":"Good","Language":"Perl","ExampleCode":"```\n\t$server = \"server.example.com\";\n\t$username = AskForUserName();\n\t$password = AskForPassword();\n\t$address = AskForAddress();\n\t$sock = OpenSocket($server, 1234);\n\twriteSocket($sock, \"AUTH $username $password\\n\");\n\t$resp = readSocket($sock);\n\tif ($resp eq \"success\") {\n```\n# username/pass is valid, go ahead and update the info!* \n\t\t\twriteSocket($sock, \"CHANGE-ADDRESS $username $address\\n\";}\n\telse {\n\t```\n\t\tprint \"ERROR: Invalid Authentication!\\n\";\n\t}\n```"},{"BodyText":"SERVER-SIDE (server.pl):"},{"Nature":"Bad","ExampleCode":"```\n\t$sock = acceptSocket(1234);\n\t($cmd, $args) = ParseClientRequest($sock);\n\tif ($cmd eq \"AUTH\") {\n\t\t\t($username, $pass) = split(/\\s+/, $args, 2);\n\t\t\t$result = AuthenticateUser($username, $pass);\n\t\t\twriteSocket($sock, \"$result\\n\");\n```\n# does not close the socket on failure; assumes the* \n\t\t\t\n\t\t\t\n\t\t\t *# user will try again* \n\t\t\t}\n\telsif ($cmd eq \"CHANGE-ADDRESS\") {\n\t```\n\t\tif (validateAddress($args)) {\n\t\t\t$res = UpdateDatabaseRecord($username, \"address\", $args);\n\t\t\twriteSocket($sock, \"SUCCESS\\n\");\n\t\t}\n\t\telse {\n\t\t\twriteSocket($sock, \"FAILURE -- address is malformed\\n\");\n\t\t}\n\t}\n```"},{"BodyText":"The server accepts 2 commands, \"AUTH\" which authenticates the user, and \"CHANGE-ADDRESS\" which updates the address field for the username. The client performs the authentication and only sends a CHANGE-ADDRESS for that user if the authentication succeeds. Because the client has already performed the authentication, the server assumes that the username in the CHANGE-ADDRESS is the same as the authenticated user. An attacker could modify the client by removing the code that sends the \"AUTH\" command and simply executing the CHANGE-ADDRESS."}]},{"ID":"DX-153","Entries":[{"IntroText":"In 2022, the OT:ICEFALL study examined products by 10 different Operational Technology (OT) vendors. The researchers reported 56 vulnerabilities and said that the products were \"insecure by design\" [REF-1283]. If exploited, these vulnerabilities often allowed adversaries to change how the products operated, ranging from denial of service to changing the code that the products executed. Since these products were often used in industries such as power, electrical, water, and others, there could even be safety implications."},{"BodyText":"Multiple vendors used client-side authentication in their OT products."}]}],"ObservedExamples":[{"Reference":"CVE-2022-33139","Description":"SCADA system only uses client-side authentication, allowing adversaries to impersonate other users.","Link":"https://www.cve.org/CVERecord?id=CVE-2022-33139"},{"Reference":"CVE-2006-6994","Description":"ASP program allows upload of .asp files by bypassing client-side checks.","Link":"https://www.cve.org/CVERecord?id=CVE-2006-6994"},{"Reference":"CVE-2007-0163","Description":"steganography products embed password information in the carrier file, which can be extracted from a modified client.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-0163"},{"Reference":"CVE-2007-0164","Description":"steganography products embed password information in the carrier file, which can be extracted from a modified client.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-0164"},{"Reference":"CVE-2007-0100","Description":"client allows server to modify client's configuration and overwrite arbitrary files.","Link":"https://www.cve.org/CVERecord?id=CVE-2007-0100"}],"TaxonomyMappings":[{"TaxonomyName":"OWASP Top Ten 2004","EntryID":"A1","EntryName":"Unvalidated Input","MappingFit":"CWE More Specific"}],"RelatedAttackPatterns":["162","202","207","208","21","31","383","384","385","386","387","388"],"MappingNotes":{"Usage":"Allowed-with-Review","Rationale":"This CWE entry is a Class and might have Base-level children that would be more appropriate","Comments":"Examine children of this entry to see if there is a better fit","Reasons":["Abstraction"]},"References":[{"ExternalReferenceID":"REF-7","Section":"Chapter 23, \"Client-Side Security Is an Oxymoron\" Page 687","Authors":["Michael Howard","David LeBlanc"],"Title":"Writing Secure Code","Edition":"2nd Edition","PublicationYear":"2002","PublicationMonth":"12","PublicationDay":"04","Publisher":"Microsoft Press","URL":"https://www.microsoftpressstore.com/store/writing-secure-code-9780735617223"},{"ExternalReferenceID":"REF-1283","Authors":["Forescout Vedere Labs"],"Title":"OT:ICEFALL: The legacy of \"insecure by design\" and its implications for certifications and risk management","PublicationYear":"2022","PublicationMonth":"06","PublicationDay":"20","URL":"https://www.forescout.com/resources/ot-icefall-report/"}],"ContentHistory":[{"Type":"Submission","SubmissionName":"CWE Community","SubmissionDate":"2007-05-07"},{"Type":"Modification","ModificationName":"Eric Dalci","ModificationOrganization":"Cigital","ModificationDate":"2008-07-01","ModificationComment":"updated Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2008-09-08","ModificationComment":"updated Relationships, Other_Notes, Taxonomy_Mappings, Weakness_Ordinalities"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-01-12","ModificationComment":"updated Demonstrative_Examples, Description, Likelihood_of_Exploit, Name, Observed_Examples, Other_Notes, Potential_Mitigations, Relationships, Research_Gaps, Time_of_Introduction"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-03-10","ModificationComment":"updated Potential_Mitigations"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-05-27","ModificationComment":"updated Demonstrative_Examples"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-07-27","ModificationComment":"updated Related_Attack_Patterns, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2009-10-29","ModificationComment":"updated Applicable_Platforms, Common_Consequences, Description"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-02-16","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-04-05","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2010-12-13","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-03-29","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-06-01","ModificationComment":"updated Common_Consequences"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2012-05-11","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2014-07-30","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-05-03","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Applicable_Platforms, Enabling_Factors_for_Exploitation, Modes_of_Introduction, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2018-03-27","ModificationComment":"updated References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-06-20","ModificationComment":"updated Related_Attack_Patterns"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2020-02-24","ModificationComment":"updated Applicable_Platforms, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2021-10-28","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-04-28","ModificationComment":"updated Research_Gaps"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2022-10-13","ModificationComment":"updated Demonstrative_Examples, Description, Observed_Examples, References, Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-01-31","ModificationComment":"updated Applicable_Platforms, Relationships, Type"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"Client-Side Enforcement of Server-Side Security","Date":"2008-04-11"},{"Type":"Rename","PreviousEntryName":"Design Principle Violation: Client-Side Enforcement of Server-Side Security","Date":"2009-01-12"}]}