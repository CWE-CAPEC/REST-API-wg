{"ID":"738","Name":"CERT C Secure Coding Standard (2008) Chapter 5 - Integers (INT)","Status":"Obsolete","Summary":"Weaknesses in this category are related to the rules and recommendations in the Integers (INT) chapter of the CERT C Secure Coding Standard (2008).","Relationships":[{"CWE_ID":"129","View_ID":"734"},{"CWE_ID":"190","View_ID":"734"},{"CWE_ID":"192","View_ID":"734"},{"CWE_ID":"197","View_ID":"734"},{"CWE_ID":"20","View_ID":"734"},{"CWE_ID":"369","View_ID":"734"},{"CWE_ID":"466","View_ID":"734"},{"CWE_ID":"587","View_ID":"734"},{"CWE_ID":"606","View_ID":"734"},{"CWE_ID":"676","View_ID":"734"},{"CWE_ID":"681","View_ID":"734"},{"CWE_ID":"682","View_ID":"734"}],"References":[{"ExternalReferenceID":"REF-597","Authors":["Robert C. Seacord"],"Title":"The CERT C Secure Coding Standard","Edition":"1st Edition","PublicationYear":"2008","PublicationMonth":"10","PublicationDay":"14","Publisher":"Addison-Wesley Professional"}],"MappingNotes":{"Usage":"Prohibited","Rationale":"This entry is a Category. Using categories for mapping has been discouraged since 2019. Categories are informal organizational groupings of weaknesses that can help CWE users with data aggregation, navigation, and browsing. However, they are not weaknesses in themselves.","Comments":"See member weaknesses of this category.","Reasons":["Category"]},"Notes":[{"Type":"Relationship","Note":"\n               \u003cxhtml:p\u003eIn the 2008 version of the CERT C Secure Coding standard, the following rules were mapped to the following CWE IDs:\u003c/xhtml:p\u003e\n                  \u003cxhtml:ul\u003e\n                     \u003cxhtml:li\u003eCWE-20 INT06-C Use strtol() or a related function to convert a string token to an integer\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-129 INT32-C Ensure that operations on signed integers do not result in overflow\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 INT03-C Use a secure integer library\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 INT30-C Ensure that unsigned integer operations do not wrap\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 INT32-C Ensure that operations on signed integers do not result in overflow\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 INT35-C Evaluate integer expressions in a larger size before comparing or assigning to that size\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-192 INT02-C Understand integer conversion rules\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-192 INT05-C Do not use input functions to convert character data if they cannot handle all possible inputs\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-192 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-197 INT02-C Understand integer conversion rules\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-197 INT05-C Do not use input functions to convert character data if they cannot handle all possible inputs\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-197 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-369 INT33-C Ensure that division and modulo operations do not result in divide-by-zero errors\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-466 INT11-C Take care when converting from pointer to integer or integer to pointer\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-587 INT11-C Take care when converting from pointer to integer or integer to pointer\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-606 INT03-C Use a secure integer library\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-676 INT06-C Use strtol() or a related function to convert a string token to an integer\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-681 INT15-C Use intmax_t or uintmax_t for formatted IO on programmer-defined integer types\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-681 INT31-C Ensure that integer conversions do not result in lost or misinterpreted data\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-681 INT35-C Evaluate integer expressions in a larger size before comparing or assigning to that size\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-682 INT07-C Use only explicitly signed or unsigned char type for numeric values\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-682 INT13-C Use bitwise operators only on unsigned operands\u003c/xhtml:li\u003e\n                  \u003c/xhtml:ul\u003e\n            "}],"Content_History":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2008-11-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Description, Name, Relationship_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Description, Name, References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"CERT C Secure Coding Section 04 - Integers (INT)","Date":"2017-11-08"},{"Type":"Rename","PreviousEntryName":"CERT C Secure Coding (2008 Version) Section 04 - Integers (INT)","Date":"2019-01-03"}]}