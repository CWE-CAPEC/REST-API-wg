{"ID":"742","Name":"CERT C Secure Coding Standard (2008) Chapter 9 - Memory Management (MEM)","Status":"Obsolete","Summary":"Weaknesses in this category are related to the rules and recommendations in the Memory Management (MEM) chapter of the CERT C Secure Coding Standard (2008).","Relationships":[{"CWE_ID":"119","View_ID":"734"},{"CWE_ID":"128","View_ID":"734"},{"CWE_ID":"131","View_ID":"734"},{"CWE_ID":"190","View_ID":"734"},{"CWE_ID":"20","View_ID":"734"},{"CWE_ID":"226","View_ID":"734"},{"CWE_ID":"244","View_ID":"734"},{"CWE_ID":"252","View_ID":"734"},{"CWE_ID":"415","View_ID":"734"},{"CWE_ID":"416","View_ID":"734"},{"CWE_ID":"476","View_ID":"734"},{"CWE_ID":"528","View_ID":"734"},{"CWE_ID":"590","View_ID":"734"},{"CWE_ID":"591","View_ID":"734"},{"CWE_ID":"628","View_ID":"734"},{"CWE_ID":"665","View_ID":"734"},{"CWE_ID":"687","View_ID":"734"},{"CWE_ID":"754","View_ID":"734"}],"References":[{"ExternalReferenceID":"REF-597","Authors":["Robert C. Seacord"],"Title":"The CERT C Secure Coding Standard","Edition":"1st Edition","PublicationYear":"2008","PublicationMonth":"10","PublicationDay":"14","Publisher":"Addison-Wesley Professional"}],"MappingNotes":{"Usage":"Prohibited","Rationale":"This entry is a Category. Using categories for mapping has been discouraged since 2019. Categories are informal organizational groupings of weaknesses that can help CWE users with data aggregation, navigation, and browsing. However, they are not weaknesses in themselves.","Comments":"See member weaknesses of this category.","Reasons":["Category"]},"Notes":[{"Type":"Relationship","Note":"\n               \u003cxhtml:p\u003eIn the 2008 version of the CERT C Secure Coding standard, the following rules were mapped to the following CWE IDs:\u003c/xhtml:p\u003e\n                  \u003cxhtml:ul\u003e\n                     \u003cxhtml:li\u003eCWE-20 MEM10-C Define and use a pointer validation function\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-119 MEM09-C Do not assume memory allocation routines initialize memory\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-128 MEM07-C Ensure that the arguments to calloc(), when multiplied, can be represented as a size_t\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-131 MEM35-C Allocate sufficient memory for an object\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 MEM07-C Ensure that the arguments to calloc(), when multiplied, can be represented as a size_t\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-190 MEM35-C Allocate sufficient memory for an object\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-226 MEM03-C Clear sensitive information stored in reusable resources returned for reuse\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-244 MEM03-C Clear sensitive information stored in reusable resources returned for reuse\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-252 MEM32-C Detect and handle memory allocation errors\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-415 MEM00-C Allocate and free memory in the same module, at the same level of abstraction\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-415 MEM01-C Store a new value in pointers immediately after free()\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-415 MEM31-C Free dynamically allocated memory exactly once\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-416 MEM00-C Allocate and free memory in the same module, at the same level of abstraction\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-416 MEM01-C Store a new value in pointers immediately after free()\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-416 MEM30-C Do not access freed memory\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-476 MEM32-C Detect and handle memory allocation errors\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-528 MEM06-C Ensure that sensitive data is not written out to disk\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-590 MEM34-C Only free memory allocated dynamically\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-591 MEM06-C Ensure that sensitive data is not written out to disk\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-628 MEM08-C Use realloc() only to resize dynamically allocated arrays\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-665 MEM09-C Do not assume memory allocation routines initialize memory\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-687 MEM04-C Do not perform zero length allocations\u003c/xhtml:li\u003e\n                     \u003cxhtml:li\u003eCWE-754 MEM32-C Detect and handle memory allocation errors\u003c/xhtml:li\u003e\n                  \u003c/xhtml:ul\u003e\n            "}],"Content_History":[{"Type":"Submission","SubmissionName":"CWE Content Team","SubmissionOrganization":"MITRE","SubmissionDate":"2008-11-24"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2011-09-13","ModificationComment":"updated Relationships"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2017-11-08","ModificationComment":"updated Description, Name, Relationship_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2019-01-03","ModificationComment":"updated Description, Name, References"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-04-27","ModificationComment":"updated Mapping_Notes"},{"Type":"Modification","ModificationName":"CWE Content Team","ModificationOrganization":"MITRE","ModificationDate":"2023-06-29","ModificationComment":"updated Mapping_Notes"},{"Type":"Rename","PreviousEntryName":"CERT C Secure Coding Section 08 - Memory Management (MEM)","Date":"2017-11-08"},{"Type":"Rename","PreviousEntryName":"CERT C Secure Coding (2008 Version) Section 08 - Memory Management (MEM)","Date":"2019-01-03"}]}